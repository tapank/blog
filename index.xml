<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes to self</title>
    <link>https://karecha.com/</link>
    
    <item>
      <title>The Zen Of Weight Lifting</title>
      <link>https://karecha.com/blog/2019/11/27/the-zen-of-weight-lifting/</link>
      <pubDate>Wed, 27 Nov 2019 17:40:27 +0530</pubDate>
      
      <guid>https://karecha.com/blog/2019/11/27/the-zen-of-weight-lifting/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;[T]o advance beyond the low-hanging fruit in any meaningful discipline &amp;ndash; from weight lifting, to writing, to meditation, to marriage &amp;ndash; you must get comfortable spending time there. Weight lifting shoves this reality in your face since progress, or in this case, lack thereof, is so objective. Yes, you can make tweaks, some of which will prove beneficial. But none of that matters if you don’t keep showing up and pounding the stone.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; From &lt;a href=&#34;https://www.nytimes.com/2019/11/22/well/move/the-zen-of-weight-lifting.html&#34; target=&#34;_blank&#34;&gt;The Zen Of Weight Lifting&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>In Praise of Idleness</title>
      <link>https://karecha.com/blog/2019/11/17/in-praise-of-idleness/</link>
      <pubDate>Sun, 17 Nov 2019 09:15:54 +0530</pubDate>
      
      <guid>https://karecha.com/blog/2019/11/17/in-praise-of-idleness/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;I want to say, in all seriousness, that a great deal of harm is being done in the modern world by the belief in the virtuousness of work, and that the road to happiness and prosperity lies in an organized diminution of work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Bertrand Russell, in the essay: &lt;a href=&#34;https://harpers.org/archive/1932/10/in-praise-of-idleness/&#34; target=&#34;_blank&#34;&gt;In Praise of Idleness&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Glendullan</title>
      <link>https://karecha.com/blog/2019/11/06/glendullan/</link>
      <pubDate>Wed, 06 Nov 2019 23:53:02 +0530</pubDate>
      
      <guid>https://karecha.com/blog/2019/11/06/glendullan/</guid>
      <description>&lt;p&gt;Oh, the pleasure of pouring Glendullan (the Singleton Single Malt
Scotch Whisky) into the sink.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Busyness vs Business in eCommerce</title>
      <link>https://karecha.com/blog/2019/11/05/busyness-vs-business-in-ecommerce/</link>
      <pubDate>Tue, 05 Nov 2019 09:07:50 +0530</pubDate>
      
      <guid>https://karecha.com/blog/2019/11/05/busyness-vs-business-in-ecommerce/</guid>
      <description>&lt;p&gt;When an eCommerce company is doing well, the team is fully engaged &amp;ndash; doing exciting things.  The energy at the workplace is palpable, and most people on the team are upbeat about the future: some about the future of the business, others about the future of their own career, and some about both.  There is a sense of purpose, and a sense of certainity about making progress in the right direction.&lt;/p&gt;

&lt;p&gt;While high morale is pervasive, something can throw a spanner in the wheels, for e.g. funds drying up, an acquisition/merger, change in senior leadership.  People start to panic and attrition ensues.  The team starts to shrink, morale dips, and people are no longer certain about the future of business, or their own future at this company.&lt;/p&gt;

&lt;p&gt;But the show must go on, and hence the business keeps chugging along, irrespective of the fact that some of the key people in the team are now gone.  What keeps the business going in this case?  The systems and processes that were built in the heyday.  As things calm down, now there are fewer projects, and software engineers get time to fix lingering bugs.&lt;/p&gt;

&lt;p&gt;With all the fixes and small improvements that get prioritized now, customers have better experience and they are more likely to return.  Also, because the loud ones are gone (usually they are the first to abandon ship when things change), there are fewer changes in the service, which leads to fewer changes that customers have to deal with, and customer loyalty improves.  This is not acknowledged enough but as long as a service is reliable (both software and operations), user experience is not as big of a deal as it is made out to be.  Customers learn how to use your service and they learn small hacks and work arounds for minor UX issues.  What they do not like is constant change.&lt;/p&gt;

&lt;p&gt;In conclusion, what if companies always operated in this way?  Instead of moving at break neck speed to add new features and functionality, go slow on this aspect but focus more on improving the reliability of your software and operations so that the customer can keep coming back because they know how to use your service.  Prioritize business over busyness.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One on ones (howto)</title>
      <link>https://karecha.com/blog/2016/12/20/one-on-ones-howto/</link>
      <pubDate>Tue, 20 Dec 2016 11:37:16 +0530</pubDate>
      
      <guid>https://karecha.com/blog/2016/12/20/one-on-ones-howto/</guid>
      <description>&lt;p&gt;Andy Grove explains how to have effective 1x1s in his classic
management book &lt;a href=&#34;https://www.amazon.com/High-Output-Management-Andrew-Grove/dp/0679762884&#34; target=&#34;_blank&#34;&gt;High Output Management&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setup:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Block regular time; tune frequency for individual&lt;/li&gt;
&lt;li&gt;Show up on time; don’t cancel at the last minute&lt;/li&gt;
&lt;li&gt;Prepare discussion points; ask him/her to do the same&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Remember:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be flexible; some structure but not too much&lt;/li&gt;
&lt;li&gt;Do some &amp;ldquo;loose timeboxing&amp;rdquo;; ensure time to cover most pressing points&lt;/li&gt;
&lt;li&gt;Set expectations around what is most important; create an incentive to focus&lt;/li&gt;
&lt;li&gt;Be fully present; shift gears and get out of autopilot&lt;/li&gt;
&lt;li&gt;Make a difference in the life of this person; devote full attention&lt;/li&gt;
&lt;li&gt;Strike a balance between asking questions and listening; consider it a precious moment of connection&lt;/li&gt;
&lt;li&gt;If the conversation diverges, get it back on track&lt;/li&gt;
&lt;li&gt;Give them time and space to think about what they want to express&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Meet:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start positive by sharing a win&lt;/li&gt;
&lt;li&gt;Ask direct but open-ended questions about goals&lt;/li&gt;
&lt;li&gt;Ask questions about career plans; do not neglect the personal&lt;/li&gt;
&lt;li&gt;Ask strategic questions (e.g. are we focused on the right things?)&lt;/li&gt;
&lt;li&gt;End with a note of appreciation and gratitude; words of affirmation mean a lot&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crocker&#39;s Rule</title>
      <link>https://karecha.com/blog/2016/11/07/crockers-rule/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2016/11/07/crockers-rule/</guid>
      <description>&lt;p&gt;Crocker&amp;rsquo;s rule:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Declaring yourself to be operating by &amp;ldquo;Crocker&amp;rsquo;s Rules&amp;rdquo; means that other people are allowed to optimize their messages for information, not for being nice to you.  Crocker&amp;rsquo;s Rules means that you have accepted full responsibility for the operation of your own mind - if you&amp;rsquo;re offended, it&amp;rsquo;s your fault.  Anyone is allowed to call you a moron and claim to be doing you a favor.  (Which, in point of fact, they would be.  One of the big problems with this culture is that everyone&amp;rsquo;s afraid to tell you you&amp;rsquo;re wrong, or they think they have to dance around it.)  Two people using Crocker&amp;rsquo;s Rules should be able to communicate all relevant information in the minimum amount of time, without paraphrasing or social formatting.  Obviously, don&amp;rsquo;t declare yourself to be operating by Crocker&amp;rsquo;s Rules unless you have that kind of mental discipline.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note that Crocker&amp;rsquo;s Rules does not mean you can insult people; it means that other people don&amp;rsquo;t have to worry about whether they are insulting you.&lt;/strong&gt;  Crocker&amp;rsquo;s Rules are a discipline, not a privilege.  Furthermore, taking advantage of Crocker&amp;rsquo;s Rules does not imply reciprocity.  How could it?  Crocker&amp;rsquo;s Rules are something you do for yourself, to maximize information received - not something you grit your teeth over and do as a favor.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Crocker&amp;rsquo;s Rules&amp;rdquo; are named after Lee Daniel Crocker.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The above originally appears &lt;a href=&#34;http://www.sl4.org/crocker.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. Crocker&amp;rsquo;s wikipedia page is &lt;a href=&#34;https://en.wikipedia.org/wiki/Lee_Daniel_Crocker&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Get Unstuck</title>
      <link>https://karecha.com/blog/2016/11/06/get-unstuck/</link>
      <pubDate>Sun, 06 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2016/11/06/get-unstuck/</guid>
      <description>&lt;p&gt;When learning a new programming language, a new framework, or a new technology, there will be times when you will get stuck. When you are stuck, do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/RTFM&#34; target=&#34;_blank&#34;&gt;RTFM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.codinghorror.com/rubber-duck-problem-solving&#34; target=&#34;_blank&#34;&gt;Ask the rubber duck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wiktionary.org/wiki/STFW&#34; target=&#34;_blank&#34;&gt;STFW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ask a friend or colleague&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This order is important for maximizing learning.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching</title>
      <link>https://karecha.com/blog/2016/10/28/teaching/</link>
      <pubDate>Fri, 28 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2016/10/28/teaching/</guid>
      <description>&lt;p&gt;Teaching is most effective when done by a practitioner of the subject matter. That is why Bret Victor says this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Real teaching is not about transferring &amp;ldquo;the material&amp;rdquo;, as if knowledge were some sort of mass-produced commodity that ships from Amazon. Real teaching is about conveying a way of thinking. How can a teacher convey a way of thinking when he doesn&amp;rsquo;t genuinely think that way?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The entire &lt;a href=&#34;http://worrydream.com/SomeThoughtsOnTeaching/&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt; is worth a read &amp;ndash; and a re-read.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pull request checklist</title>
      <link>https://karecha.com/blog/2016/10/26/pull-request-checklist/</link>
      <pubDate>Wed, 26 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2016/10/26/pull-request-checklist/</guid>
      <description>&lt;p&gt;Open source projects have styleguides, and &lt;a href=&#34;https://github.com/chain/chain/blob/main/docs/internal/styleguide.md&#34; target=&#34;_blank&#34;&gt;this one&lt;/a&gt; is one such example. What caught my attention is the code review checklist, though there are other nuggets in there.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Checklist&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before you submit your patch for review, look at the diff. Consider running through a quick mental checklist of all the things discussed above before submitting your patch for review:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Did I write tests and update docs?&lt;/li&gt;
&lt;li&gt;Can it be any clearer?&lt;/li&gt;
&lt;li&gt;Can I delete more lines of code?&lt;/li&gt;
&lt;li&gt;Does the diff overall look reasonable?&lt;/li&gt;
&lt;li&gt;Is there any cruft like stray blank lines or debugging output or irrelevant trivial refactorings?&lt;/li&gt;
&lt;li&gt;Should the change be broken into multiple meaningful pieces?&lt;/li&gt;
&lt;li&gt;Is this change really necessary at all?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(You might be surprised how often the answer to that last one is “no”.)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Advice from an astronaut</title>
      <link>https://karecha.com/blog/2016/01/03/advice-from-an-astronaut/</link>
      <pubDate>Sun, 03 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2016/01/03/advice-from-an-astronaut/</guid>
      <description>&lt;p&gt;To the &lt;a href=&#34;https://www.reddit.com/r/IAmA/comments/1s4l7v/i_am_col_chris_hadfield_retired_astronaut/&#34; target=&#34;_blank&#34;&gt;question&lt;/a&gt;: &amp;ldquo;What advice would you give a 13-year-old who wishes to become an astronaut in the future?&amp;rdquo;, the astronaut &lt;a href=&#34;https://twitter.com/Cmdr_Hadfield&#34; target=&#34;_blank&#34;&gt;Chris Hadfield&lt;/a&gt; answered:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;3 things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;keep your body in shape. You get strong at the gym and thin in the kitchen&lt;/li&gt;
&lt;li&gt;get an advanced technical education, one that challenges you, at least a Master&amp;rsquo;s degree&lt;/li&gt;
&lt;li&gt;make decisions, and stick to them. It&amp;rsquo;s a skill that gets better with practice.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Agile is the new waterfall</title>
      <link>https://karecha.com/blog/2015/10/15/agile-is-the-new-waterfall/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2015/10/15/agile-is-the-new-waterfall/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://medium.com/swlh/agile-is-the-new-waterfall-f7baef5d026d&#34; target=&#34;_blank&#34;&gt;Thought provoking analysis&lt;/a&gt; of the state of Agile today.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Unfortunately, with little or no documentation, now the developer is accountable for the outcome while having little or no authority to create a winning one. This responsibility without authority makes Agile even more toxic than Waterfall.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Tab width</title>
      <link>https://karecha.com/blog/2015/10/11/tab-width/</link>
      <pubDate>Sun, 11 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2015/10/11/tab-width/</guid>
      <description>&lt;p&gt;After reading the following from the &lt;a href=&#34;https://www.kernel.org/doc/Documentation/CodingStyle&#34; target=&#34;_blank&#34;&gt;kernel.org coding styleguide&lt;/a&gt;, it is easy to see why not to write code with tabs converted to spaces, and why not to set tab width to anything less than eight.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tabs are 8 characters, and thus indentations are also 8 characters.  There are heretic movements that try to make indentations 4 (or even 2!) characters deep, and that is akin to trying to define the value of PI to be 3.&lt;/p&gt;

&lt;p&gt;Rationale: The whole idea behind indentation is to clearly define where a block of control starts and ends.  Especially when you&amp;rsquo;ve been looking at your screen for 20 straight hours, you&amp;rsquo;ll find it a lot easier to see how the indentation works if you have large indentations.&lt;/p&gt;

&lt;p&gt;Now, some people will claim that having 8-character indentations makes the code move too far to the right, and makes it hard to read on a 80-character terminal screen.  The answer to that is that if you need more than 3 levels of indentation, you&amp;rsquo;re screwed anyway, and should fix your program.&lt;/p&gt;

&lt;p&gt;In short, 8-char indents make things easier to read, and have the added benefit of warning you when you&amp;rsquo;re nesting your functions too deep.  Heed that warning.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, using tabs instead of spaces allows the reader to personalize visual depth of indentation, while spaces lock you into what the author chose. Hence, prefer tabs over spaces in your coding standards &amp;ndash; and even if you don&amp;rsquo;t &amp;ndash; never mix the two!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://karecha.com/blog/2015/09/20/process/</link>
      <pubDate>Sun, 20 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2015/09/20/process/</guid>
      <description>&lt;p&gt;Author of &amp;ldquo;&lt;a href=&#34;http://firstround.com/review/im-sorry-but-agile-wont-fix-your-products/&#34; target=&#34;_blank&#34;&gt;I&amp;rsquo;m Sorry, But Agile Won&amp;rsquo;t Fix Your Products&lt;/a&gt;&amp;rdquo; has valid points but something more needs to be said. I am concerned that the onus of creativity is being relegated away from people, as if process is capable of thinking.&lt;/p&gt;

&lt;p&gt;It is important to note that Agile is one of many software development processes, and hence it could have been claimed that &amp;ldquo;Processes will not fix your Products,&amp;rdquo; and the arguments in that article would still hold good. Anybody who has been on a team that delivered working software &amp;ndash; successful or not &amp;ndash; will agree that the most difficult part of product lifecycle is to decide &lt;em&gt;what&lt;/em&gt; to build. This is a step that tests the toughest of souls and can make strong people cry. Once a decision has been made about &lt;em&gt;what&lt;/em&gt; needs to be build, then its a race to the finish and process will help with navigate &lt;em&gt;how&lt;/em&gt;. People may still make mistakes during construction phase, but those mistakes are easy to spot and are hence fixable. No software development process will help during product definition phase, and what makes it challenging is &amp;ndash; product owners need to answer existential questions, including:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Why are we in business?&lt;/li&gt;
&lt;li&gt;What are we trying to accomplish?&lt;/li&gt;
&lt;li&gt;What are our core guiding principles?&lt;/li&gt;
&lt;li&gt;How will this product or increment help the business without violating any of the above?&lt;/li&gt;
&lt;li&gt;Are we doing this just because we can? Or, are we doing this because we should?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These questions can be difficult to answer, yet must be asked irrespective of process.&lt;/p&gt;

&lt;p&gt;Once a decision of &lt;em&gt;what&lt;/em&gt; has been made, it is time to ask &lt;em&gt;how&lt;/em&gt;. This is where process steps in, and based on the nature of a product, time to market, nature of target audience, maturity and capacity of development team, etc., a team uses process to take the product to market. But before we decide which process to use, let us remind ourselves why we need process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who needs process?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of notions about process is that you need it to help team members with little experience so they don&amp;rsquo;t make rookie mistakes. This notion is not only incorrect, but also hurts a team that has bought into this notion. Ever seen a situation where a senior member of a team will demand that a newbie create a ticket even for a trivial code change, but they themselves will make such changes &amp;ndash; not only without following an agreed &amp;ldquo;process&amp;rdquo;, but even without informing others in the team? Such a team now has two problems [An exercise for the reader to list the two problems].&lt;/p&gt;

&lt;p&gt;A process is needed for mature and experienced team members to synchronize and coordinate their work in order to extract maximum value from a team&amp;rsquo;s effort. Without process, you will have multiple members in a team putting in their best work but the vector of each individual&amp;rsquo;s effort is less than 100 percent along the dimension that a business wants to go. They will keep stepping on each other&amp;rsquo;s foot and will project an inaccurate picture of state of affairs to others in a team, and even outside the team. This is why we need process, but no process can compensate for a lack of thinking that goes into product decisions.&lt;/p&gt;

&lt;p&gt;What about rookies in a team? Of course they too need to follow process, but more important, learn why every process step exists and matters. Encourage them to ask &lt;em&gt;why&lt;/em&gt; a certain process is necessary, and be very happy when they challenge that a certain process is unnecessary. In absence of healthy scepticism for process, the team risks descending into process hell.&lt;/p&gt;

&lt;p&gt;Bottomline: a mature team will not only follow process, but constantly evolve it to ensure that the team becomes more efficient and effective with time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Agile or agile?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Agile&amp;rdquo;, the noun, is the poster kid in the process world and it rose to fame when the &lt;a href=&#34;http://www.agilemanifesto.org/&#34; target=&#34;_blank&#34;&gt;Agile Manifesto&lt;/a&gt; was formed. The other &amp;ldquo;agile&amp;rdquo; is what the proponents wanted the development teams to be, where agile is an adjective and is a word to be used by a proud technician as such, &amp;ldquo;I work for an agile team that uses a home grown variation of Scrum and XP to deliver quality software.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;So, &amp;ldquo;Agile&amp;rdquo; is a well intentioned set of guidelines which were also a snapshot of what made sense at the time. Just like any process, Agile is starting to show signs of age. Unless a team is agile, they will find Agile to be limiting. Kent Beck (one of the signees of the manifesto and the inventor of JUnit) tried to &lt;a href=&#34;https://www.youtube.com/watch?v=d4qldY0g_dI&#34; target=&#34;_blank&#34;&gt;fix this way back in 2010&lt;/a&gt;, and recently Dave Thomas (another signee of the manifesto and the author of the Ruby pickaxe book) &lt;a href=&#34;http://pragdave.me/blog/2014/03/04/time-to-kill-agile/&#34; target=&#34;_blank&#34;&gt;said this&lt;/a&gt; and he did not pull his punches.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A process will not fix your product. A process is a set of guidelines and is as good or bad as the people who use them. A process will not &lt;em&gt;do&lt;/em&gt; anything &amp;ndash; that is left to the humans. Nothing will fix a product, except the humans involved. There is no escaping the cognitive load of product definition, and we, the humans, are the right &amp;lsquo;tool&amp;rsquo; to take on this responsibility.&lt;/p&gt;

&lt;p&gt;And, how do you ship software? There is no &lt;a href=&#34;http://firstround.com/review/the-right-way-to-ship-software/&#34; target=&#34;_blank&#34;&gt;one right answer&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tending code</title>
      <link>https://karecha.com/blog/2015/09/17/tending-code/</link>
      <pubDate>Thu, 17 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2015/09/17/tending-code/</guid>
      <description>&lt;p&gt;Rachel Davies in a blog post titled &lt;a href=&#34;http://rachelcdavies.github.io/2015/04/30/time-to-tend-code.html&#34; target=&#34;_blank&#34;&gt;Making Time To Tend Code&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Setting aside time to tend our code is essential for us to maintain fruitful software assets. Start by making technical tasks visible to your team. Prioritise these tasks so that the team works on the ones that will yield most benefit. At standup, consider as a team, what effort should be put on code tending tasks today. Keep track how much time you spend on code tending, this can help you strike the right balance against business facing features. Reflect together as a team on how code tending is going.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Grit</title>
      <link>https://karecha.com/blog/2015/09/10/grit/</link>
      <pubDate>Thu, 10 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2015/09/10/grit/</guid>
      <description>&lt;p&gt;DHH in a blog post titled &lt;a href=&#34;https://signalvnoise.com/posts/3924-grit-is-for-cowboys&#34; target=&#34;_blank&#34;&gt;Grit is for cowboys&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Grit is a convenient trait for enticing others to comply with the uncomfortable or the uninteresting. It elevates the perseverance of such adversity to a virtue in and of itself. Just dangle that long-term goal in front of them, accuse them of lack of grit, and compliance will oft follow.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>We need more Scouts</title>
      <link>https://karecha.com/blog/2015/04/03/we-need-more-scouts/</link>
      <pubDate>Fri, 03 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2015/04/03/we-need-more-scouts/</guid>
      <description>&lt;p&gt;A typical software development shop in India has one permanent &amp;lsquo;feature&amp;rsquo;: an army of workers (a.k.a. housekeeping staff) whose sole responsiblity is to cleanup after employees. These are the people whose job is to collect empty coffee mugs or cups from cubicles, refill the coffee machine in the pantry, clean the tables in the pantry after the employees leave coffee or tea stains on them, or dispose the empty pizza boxes once the employees are done eating pizza. Even the chairs around the tables need to be put back in place once the employees who sat on those chairs leave them after pushing them back when getting off the said chairs. When the employees leave the meeting room, they leave the projector on, the lights on, leave the chairs scattered across the meeting room, leave empty coffee cups on the table, leave writing on the whiteboard, leave used tissue on the table, leave whiteboard markers anywhere but in the little tray meant for the markers, leave extra chairs in the room that they pulled from cubicles nearby because there werent enough chairs in the room etc. This shows that people are not paying attention to what they leave behind as a consequence of their actions.&lt;/p&gt;

&lt;p&gt;My point is, for some reason, we have been conditioned to believe that cleaning up is not our responisibility. It is someone else&amp;rsquo;s job to cleanup after they are done doing whatever they were doing. When we see litter, the question we ask is &amp;ldquo;Why has someone not cleaned this up?&amp;rdquo;, instead of &amp;ldquo;Why did someone litter, and how can we educate them to not not do it again?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;While I understand it is much cheaper to pay someone else to do the dirty job (especially when the minimum hourly wages are so low), this comes at a price that we should know we invariably end up paying. For example, I cannot think of places where you can find some quiet and solitude. If a place is safe and clean, then its most likely riddled with an army of workers who keep this place safe and clean.&lt;/p&gt;

&lt;p&gt;The solution is for people to change their mindset by embracing &lt;a href=&#34;http://www.informit.com/articles/article.aspx?p=1235624&amp;amp;seqNum=6&#34; target=&#34;_blank&#34;&gt;the boy scout rule&lt;/a&gt;. This applies to programming as well as anything else we do. The rule goes: &amp;ldquo;Leave the campground cleaner than you found it.&amp;rdquo; If you can maintain cleanliness of a place over a period of time, then you will do the same to your code, and most other things that you do in life.&lt;/p&gt;

&lt;p&gt;As a programmer, the lessons are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Leave the code more readable and maintainable after every change.&lt;/li&gt;
&lt;li&gt;Test your code even if someone else will test it for you later.&lt;/li&gt;
&lt;li&gt;When someone reports an issue, stop arguing and pay attention to what caused the person to report an issue, even if it is not a bug.&lt;/li&gt;
&lt;li&gt;Try to simplify the deployment steps whenever possible.&lt;/li&gt;
&lt;li&gt;Handoff to other functions once you are done. E.g. tell documentation person what needs to change/added.&lt;/li&gt;
&lt;li&gt;Finally, ensure that the end user of your application benefits from your change in some way. This is the sole purpose of making a code change.&lt;/li&gt;
&lt;li&gt;All of this is possible only if you stop expecting people to automatically cleanup after you.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Break</title>
      <link>https://karecha.com/blog/2014/11/13/break/</link>
      <pubDate>Thu, 13 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2014/11/13/break/</guid>
      <description>&lt;p&gt;After 24 years of working at various jobs, I bid goodbye to by colleagues and began the first full time break of my career. This was not easy, especially because once I announced my decision about a month ago, my team and my colleagues made me feel very special. But this day had to come, and now I am no longer employed and intend to stay this way until I fix a few things. As an engineer, I am trained to spot slow moving disasters in their early stages and that allows me to take my own sweet time to engineer and implement a fix before a lot of damage is done. Spotting issues early allows me to take aim and have a shot at a solution.&lt;/p&gt;

&lt;p&gt;The slow moving disasters that I talked about are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Degrading physical fitness&lt;/li&gt;
&lt;li&gt;Lack of quality time with family&lt;/li&gt;
&lt;li&gt;Lack of creative satisfaction&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let me explain.&lt;/p&gt;

&lt;p&gt;My last job as a software development manager was to manage a devops team of very smart software development engineers that built and maintained customer facing services. While I had fun getting involved in solving interesting problems, the always-on nature of a devops manager role started to take its toll. Due to this constant low level stress, my otherwise healthy lifestyle started to degrade. It started with me missing one or two running and gym sessions every week, and eventually, by the end of last year I stopped exercising. To make matters worse, I started eating unhealthy. Everybody around me was eating unhealthy too (but hey, most of them are half my age) and it took me a while to notice this unhealthy change. In the last 1.5 years, I put on 8 kg and I think health and fitness is too high a cost to pay for &lt;em&gt;any&lt;/em&gt; career gain. I need to get back in shape.&lt;/p&gt;

&lt;p&gt;At the end of each day, I want to spend time with my family. The fact is, the end of the day brings with it a flurry of activity as my US colleagues wake up, start their day, and emails start pouring in. Don&amp;rsquo;t get me wrong &amp;ndash; I am not saying it is their fault. They too end up going through the same at the end of their day. As a result when its time to go to bed, instead of being relaxed and prepared for a sound sleep, my adrenaline is peaking and it affects the quality of my sleep. And there are late evening calls. There have been times when the kids want to talk to me but I am on a call and have to ask them to leave the room. Children (not just mine, but of so many others in this industry) are conditioned to shut up when they hear &amp;ldquo;papa is on a call&amp;rdquo;. I do not want to do this to my kids any more.&lt;/p&gt;

&lt;p&gt;Last, but not the least, I found myself caught up in so much paper work and processes that it started to defeat the reason I joined this industry. I love solving problems and I love developing software, but I found myself doing less of it. There must be a way for a middle aged software professional to find joy in this profession. I will need to figure this out.&lt;/p&gt;

&lt;p&gt;In this post, I talk about the problems. Tomorrow, a new day will begin and I will start working on solutions. Now I have time on my hands to figure out the next steps. I am looking forward to solving these problems because, after all, I love solving problems.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deliberate practice</title>
      <link>https://karecha.com/blog/2014/03/17/deliberate-practice/</link>
      <pubDate>Mon, 17 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2014/03/17/deliberate-practice/</guid>
      <description>&lt;p&gt;Ruby Rogues podcast recently had an interesting discussion about how to learn [1]. At the center of the discussion was a wrong, but commonly held notion that talent is genetic. They discussed research about the role of deliberate practice in making of an elite performer. I think this knowledge broadly applies to a number of domains, including to those in knowledge industry. The main source of that information is from a research paper by Ericsson et. al. [2], which is also considered to be one of the main sources of information for Malcom Gladwell&amp;rsquo;s famous 10,000 hours narrative in his book Outliers. The material presented below is from that research paper by Ericsson et. al., and is paraphrased and summarized for my own understanding. The research matters to me for two reasons: one, I have children who are 7 and 4, and are of age when expert performers are first introduced to the domain in which they become experts in their later life; and second, though I am well past that tender age, am eager to learn anything that applies to individuals of any age. I want to acquire new skills and get better at the ones that I already have.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not hereditary; but acquired&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What are the possibilities and limits of change in cognitive capacities and bodily functions of an individual? Only few abilities are arguably direct reflection of genetic factors, for e.g. height, which may be detrimental to an individual&amp;rsquo;s success at sport like basketball and volleyball. But in most cases, an expert&amp;rsquo;s superior performance implies that acquired knowledge and skill are important to attainment of expert performance. The only plausible role for hereditary factors is in the developmental history of an individual. Superior performance by very young children without prior instruction may suggest exceptional promise, leading to an early onset of training. Unique environmental conditions and parental support, rather than talent, are the important factors determining the initial onset of training and ultimate performance. Training can also compensate for disabilities and has a greater impact than often believed possible. What distinguishes expert performers is also more and better organized knowledge, which is an acquired asset.&lt;/p&gt;

&lt;p&gt;Following are the phases of development that lead to elite performance. During the first three phases, you need support from external sources, such as parents (for children), teachers or mentors:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Phase 1&lt;/em&gt;: Starts with introduction to activities in the domain and ends with the start of instruction and deliberate practice.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Phase 2&lt;/em&gt;: Consists of an extended period of preparation and ends with the individual&amp;rsquo;s commitment to pursue activities in the domain on a full-time basis.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Phase 3&lt;/em&gt;: Consists of full-time commitment to improving performance and ends when you either can make a living as a professional performer in the domain, or you quit.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Phase 4&lt;/em&gt;: You go beyond the knowledge of your teachers or mentors, to make a unique innovative contribution to your domain.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A common theme that flows through the four phases above is of deliberate practice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is deliberate practice&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The maximum level of performance for individuals in a given domain is not attained automatically due to extended experience. People hit plateaus in skill acquisition, when for long periods they seem unable to attain further improvements. The level of their performance can be increased by making deliberate efforts to improve. This is done by actively searching for methods to improve performance and when they make changes in methods it often leads to clear improvements. The activity one does in order to see improvement is called deliberate practice. The goal of deliberate practice is not doing &amp;ldquo;more of the same.&amp;rdquo; Rather, it involves engaging with full concentration in a special activity to improve your performance. Here are the definitions of broad activities that we perform on a daily basis:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Work&lt;/em&gt;: Public performance, competitions, services rendered for pay, and other activities directly motivated by external rewards&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Play&lt;/em&gt;: Activities that have no explicit goal and that are inherently enjoyable&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Deliberate practice&lt;/em&gt;: Activities that have been specially designed to improve the current level of performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In contrast to play, deliberate practice is a highly structured activity, the explicit goal of which is to improve performance. Specific tasks are invented to overcome weaknesses, and performance is carefully monitored to provide cues for ways to improve it further. Its practice requires effort and is not inherently enjoyable. Without the goal of improving performance, the motivation to engage in practice vanishes. Individuals are motivated to practice only because practice improves their performance. It does not generate immediate monetary rewards, but rather generates costs associated with access to teachers and training environments. The long-term consequences of deliberate practice is important because of the cost involved.&lt;/p&gt;

&lt;p&gt;Deliberate practice should not be confused with the enjoyable state of &amp;ldquo;flow,&amp;rdquo; in which individuals are completely immersed in an activity. Flow is a state of effortless mastery and execution of an activity. This state of diffused attention is almost in contrast with focused attention required by deliberate practice to maximize feedback and information about corrective action. Hence, flow produces a state which allows an individual to enjoy the activity performed, but does not necessarily improve the level of their expertise as a result of performing that activity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How much is enough&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You must maximize the amount of time you spend on deliberate practice to improve performance. International level performers often receive their first exposure to their domain between the ages of 3 and 8, but it is never too late to start. People in their advanced age have seen their performance improve as a result of deliberate practice.&lt;/p&gt;

&lt;p&gt;The level of performance an individual attains is directly related to the amount of deliberate practice. Hence, to maximize your performance, you should maximize the amount of deliberate practice. But before you go full throttle, you should also know that this time period extends over months and years. The duration of effective daily practice that can be sustained over such long periods is limited and it is necessary to maintain full attention during the entire period of deliberate practice. Hence, you should start slow and slowly increase the amount of deliberate practice over extended periods of time. You will need to device your own strategy to make it sustainable. Look at examples of successful people in order to come up with your solution. For example, successful authors who can control their work habits and are motivated to optimize their productivity, limit their most important intellectual activity to a fixed daily amount when working on projects that require long periods of time to complete. Too rapid increase in the intensity of practice lead to &amp;ldquo;overuse and overtraining&amp;rdquo;, which occur frequently in sports and even in music. Experts carefully schedule deliberate practice and limit its duration to avoid exhaustion and burnout.&lt;/p&gt;

&lt;p&gt;In summary, disregard of the effort constraint on deliberate practice leads to injury and even failure. Start slow, and increase the amount of time you spend on a daily basis on deliberate practice. Some of the best performers engage in practice for up to 4 hours per day including weekend. However, you should be aware that they achieved 4 hours practice after a number of years in that domain, so you want to start with 45 minutes or 1 hour a day, and gradually increase the duration over time. The amount of weekly practice for individuals maintaining regular practice increases with age, accumulated practice, and performance. In virtually all domains, there is evidence that the most important activity &amp;ndash; practice, thinking, or writing &amp;ndash; requires considerable effort and is scheduled for a fixed period during the day. For those exceptional individuals who sustain this regular activity for months and years, its duration is limited to 2-4 hours a day, which is a fraction of their time awake.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;More about experts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Individuals who practice more, also sleep longer. They also spend less time for leisure even though they admit that it is the most enjoyable of all activities. Experts are also able to estimate quite accurately the time they allocated to leisure, whereas others underestimate their leisure time.&lt;/p&gt;

&lt;p&gt;They also seek out the very best teachers in their domain. Over the years, they have taken formal instruction from more teachers than the non experts.&lt;/p&gt;

&lt;p&gt;The organization and accessibility of knowledge has also been shown to distinguish individuals at different levels of expertise in physics, medicine, and social science. Unlike the rapid decay of acquired knowledge seen in laboratory studies, repeated application and use of knowledge over extended periods leads to remarkably good retention of the knowledge even after years or decades of disuse.&lt;/p&gt;

&lt;p&gt;Once an individual has acquired a reasonably high level of skill, it is possible for that individual to attain an above average performance or even regain the original performance after a brief period of retraining.&lt;/p&gt;

&lt;p&gt;Elite performers maximize the effectiveness of their deliberate activities by engaging in them at a certain time of day, which differs across domains. Scientists and authors consistently choose to use mornings for demanding writing, and athletes prefer afternoons for their most strenuous practice sessions. Research on the effects of the time of day shows that simple perceptual-motor performance is enhanced in the afternoon and early evening, whereas intellectually demanding activities are enhanced in the morning. So pick a fixed time in the day that works for you, and use that time for deliberate practice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Research shows that the past amount of deliberate practice is directly related to the individual&amp;rsquo;s current performance. Deliberate practice starts at a low level and increases over time. Even the adult elite performance, with individuals with more than 10 years of practice, is related to the amount of deliberate practice. Domain-specific mechanisms, rather than more general cognitive-motor abilities, are responsible for expert&amp;rsquo;s superior performance.&lt;/p&gt;

&lt;p&gt;Elite performance is a product of a decade or more of maximal efforts to improve performance in a domain, through an optimal distribution of deliberate practice.&lt;/p&gt;

&lt;p&gt;&amp;ndash;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&#34;http://rubyrogues.com/131-rr-how-to-learn&#34; target=&#34;_blank&#34;&gt;http://rubyrogues.com/131-rr-how-to-learn&lt;/a&gt;&lt;br /&gt;
[2] Ericsson et. al. (1993) The Role of Deliberate Practice in the Acquisition of Expert Performance. (&lt;a href=&#34;http://graphics8.nytimes.com/images/blogs/freakonomics/pdf/DeliberatePractice%28PsychologicalReview%29.pdf&#34; target=&#34;_blank&#34;&gt;download PDF&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Balance</title>
      <link>https://karecha.com/blog/2014/01/05/balance/</link>
      <pubDate>Sun, 05 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2014/01/05/balance/</guid>
      <description>&lt;p&gt;A life lesson I learned last year is by watching others go about doing their jobs. It is about effectiveness &amp;ndash; and striking a balance between short term and longer term effectiveness. The lesson is: do not give up long term effectiveness in favor of short term efficiencies.&lt;/p&gt;

&lt;p&gt;When we look back, it is easy to tell if the balance was right but not as easy when the choice lies in front of us. In such situations, leaning towards long term effectiveness makes it more likely that we will be comfortable with our choices of the past.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2013</title>
      <link>https://karecha.com/blog/2013/12/31/2013/</link>
      <pubDate>Tue, 31 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2013/12/31/2013/</guid>
      <description>&lt;p&gt;What a year 2013 has been. I quit my job at the company that I worked at for 13 years. Here &amp;ndash; with my current employer &amp;ndash; I have learned a lot in these ten months. I have seen what I think makes a technology company successful. I have met people who I think are very smart. I have also seen what I think makes smart people make choices that may not be aligned with the grain of a company&amp;rsquo;s culture. I have seen two bosses at this company in this short span of time. I have seen a lot more&amp;hellip;&lt;/p&gt;

&lt;p&gt;This is just the beginning. It feels like I will see much more here than what I can imagine. But hey, that&amp;rsquo;s why I am here.&lt;/p&gt;

&lt;p&gt;I have plans for 2014. I don&amp;rsquo;t know where I will be at the end of the year, but its going to be a ride to remember. People ask what&amp;rsquo;s the big deal about new year &amp;ndash; its just an artificial event. I don&amp;rsquo;t think so. Because if I do, the year will be just like that &amp;ndash; one more year of boredom and routine.&lt;/p&gt;

&lt;p&gt;If you have not made a solid plan for this new year, now is the time to do so. Just let your imagination run wild, and think of what you want to achieve by the end of the year. You will be surprised to see your plans and dreams come true. Just be sure what you ask is what you actually want, because there will be no going back.&lt;/p&gt;

&lt;p&gt;Happy new year!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On being a novice</title>
      <link>https://karecha.com/blog/2013/11/23/on-being-a-novice/</link>
      <pubDate>Sat, 23 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2013/11/23/on-being-a-novice/</guid>
      <description>&lt;p&gt;Uncle Bob in a blog post titled &lt;a href=&#34;http://blog.8thlight.com/uncle-bob/2013/11/19/HoardsOfNovices.html&#34; target=&#34;_blank&#34;&gt;Hoards of Novices&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Do you remember that first line of code you wrote when you were very young. Do you remember the thrill it gave you to see that line of code actually execute. Do you remember the feeling of power it gave you. You were the master. The machine was your slave, and you could make that machine do anything!&lt;/p&gt;

&lt;p&gt;Many of us became programmers because of a moment like that.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Start with peace of mind</title>
      <link>https://karecha.com/blog/2013/10/06/start-with-peace-of-mind/</link>
      <pubDate>Sun, 06 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2013/10/06/start-with-peace-of-mind/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Peace of mind produces right values, right values produce right thoughts. Right thoughts produce right actions and right actions produce work which will be a material reflection for others to see of the serenity at the center of it all.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Robert M. Pirsig&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Two kinds of books</title>
      <link>https://karecha.com/blog/2013/10/06/two-kinds-of-books/</link>
      <pubDate>Sun, 06 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2013/10/06/two-kinds-of-books/</guid>
      <description>&lt;p&gt;There are two kinds of [selfhelp] books:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Those that tell you why you are the way you are, and that its ok to be the way you are; and&lt;/li&gt;
&lt;li&gt;Those that tell you how to become what you want to become.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I see value in both of the above, but time spent reading the second type feels like more bang for the buck.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Looking forward</title>
      <link>https://karecha.com/blog/2013/06/16/looking-forward/</link>
      <pubDate>Sun, 16 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2013/06/16/looking-forward/</guid>
      <description>&lt;p&gt;One thing that keeps us going more than anything else is &amp;ndash; the hope that tomorrow is going to be better than today. This is true no matter what your today looks like. You may be going through the worst day of your life or today may be the best day of your life, but tomorrow needs to be something you look forward to. For example, &lt;a href=&#34;http://www.thedailybeast.com/articles/2012/08/14/london-athletes-face-post-olympic-blues.html&#34; target=&#34;_blank&#34;&gt;former Olympians struggle&lt;/a&gt; with post Olympic stress disorder because their best days seem to be behind them.&lt;/p&gt;

&lt;p&gt;Give yourself something to look forward to. That is what keeps us going.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Craftsmen build tools</title>
      <link>https://karecha.com/blog/2013/05/14/craftsmen-build-tools/</link>
      <pubDate>Tue, 14 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2013/05/14/craftsmen-build-tools/</guid>
      <description>&lt;p&gt;One of the tell tale signs of craftsmen is their natural afinity for building or improving tools. While this may sound unnatural to others, a craftsman does not have to think about this; it comes to him naturally &amp;ndash; improving existing tools or building new tools.&lt;/p&gt;

&lt;p&gt;When I am interviewing a candidate for a job, I always ask this question: &amp;ldquo;Tell me about the tools you have built or improved to make you more effective at your job.&amp;rdquo; Craftsman&amp;rsquo;s eyes light up, he sits straight with an improved posture, leans forward and starts talking about the tool(s) he developed and how it made a difference in the way he and his team accomplished their daily tasks. He forgets that he is answering an interview question, because now we are in his teritory which he knows like the back of his hand and he is most proud of having built. All I need to do now is find out how well he did what he loves doing most.&lt;/p&gt;

&lt;p&gt;I need at least one craftsman on my team who helps sharpen the metaphorical saw while others saw away at the trees.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting back on track</title>
      <link>https://karecha.com/blog/2013/04/01/getting-back-on-track/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2013/04/01/getting-back-on-track/</guid>
      <description>&lt;p&gt;Moving to a new job and a new city threw me off track in many ways. Now, I think things are falling back in place and I may soon be on track. This means, some of the things that I did outside of work &amp;ndash; and had become used to &amp;ndash; will again become possible.&lt;/p&gt;

&lt;p&gt;Just being able to post a few words on my blog feels great.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On writing</title>
      <link>https://karecha.com/blog/2012/11/03/on-writing/</link>
      <pubDate>Sat, 03 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/11/03/on-writing/</guid>
      <description>&lt;p&gt;I have started reading &lt;a href=&#34;http://www.amazon.com/Writing-Well-30th-Anniversary-Edition/dp/0060891548&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;On writing well&amp;rdquo;&lt;/a&gt; by &lt;a href=&#34;http://www.williamzinsserwriter.com/&#34; target=&#34;_blank&#34;&gt;William Zinsser&lt;/a&gt; and just from reading chapter 1, I can see what makes this book tick. It is a sequel to the seminal work on this subject &amp;ndash; &lt;a href=&#34;http://en.wikipedia.org/wiki/The_Elements_of_Style&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Elements of style&amp;rdquo;&lt;/a&gt; by Strunk and White. I have enjoyed reading &amp;ldquo;Elements of style&amp;rdquo; so much that it left me with a longing for more on the topic; and &amp;ldquo;On writing well&amp;rdquo; satisfies that craving.&lt;/p&gt;

&lt;p&gt;There is more to this book than just [literary] writing. Surprisingly, the insights gained from reading the first chapter go beyond the craft of writing &amp;ndash; to software development, i.e. writing code. Following are a few assertions that the author makes which apply to writing code as well.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Writing is not easy and fun. It is hard and lonely, and the words seldom just flow. &lt;em&gt;(So is programming, but &lt;a href=&#34;http://tom.preston-werner.com/2010/08/23/readme-driven-development.html&#34; target=&#34;_blank&#34;&gt;readme driven development&lt;/a&gt; can help.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Rewriting is the essence of writing. Professional writers rewrite their sentences over and over. &lt;em&gt;(In other words, &lt;a href=&#34;http://www.extremeprogramming.org/rules/refactor.html&#34; target=&#34;_blank&#34;&gt;refactor&lt;/a&gt; your code all the time.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Writing is a craft, not an art. &lt;em&gt;(&lt;a href=&#34;http://codekata.pragprog.com/2007/01/code_kata_backg.html&#34; target=&#34;_blank&#34;&gt;Practice&lt;/a&gt; your craft as a programmer.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;If your job is writing, you learn to do it every day. Like any other job. &lt;em&gt;(&lt;a href=&#34;http://www.huffingtonpost.com/2012/05/18/mark-zuckerberg-code_n_1525333.html&#34; target=&#34;_blank&#34;&gt;Write code every day&lt;/a&gt; no matter your job title.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Professional writers are solitary drudges who seldom see other writers. &lt;em&gt;(Many successful software developers too work alone &amp;ndash; here&amp;rsquo;s &lt;a href=&#34;http://www.marco.org/about&#34; target=&#34;_blank&#34;&gt;an example&lt;/a&gt;.)&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I am happy to be reading this book.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ideas</title>
      <link>https://karecha.com/blog/2012/09/30/ideas/</link>
      <pubDate>Sun, 30 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/09/30/ideas/</guid>
      <description>&lt;p&gt;Ideas are what lead to new things. The two different stages in this process of creating something new are &amp;ndash; the idea and the implementation. So first, there needs to be an idea &amp;ndash; that moment of inspiration when a thought is born which promises to be a seed to doing or creating something new or different, possibly even useful (lucky you if it is useful because most ideas are useless). The second stage is implementation, where the idea generator or somebody else takes that idea and converts that into something useful.&lt;/p&gt;

&lt;p&gt;Most ideas die without seeing any effort dedicated to preserving or implementing them. My guess is that ideas die mostly because they are never captured. An idea surfaces as a spark in someones head only to vanish in the next moment because that person got busy with something else.&lt;/p&gt;

&lt;p&gt;One common practice successful people say they use to take ideas to implementation is by capturing the idea in the form of a note before they forget the details. They usually do this by always carrying with them a notebook where they can jot down the idea as soon as it occurs to them. Its important to do that right away because in that moment of inspiration, you can get into as much detail as you want about an idea and start taking notes before you forget or lose interest. Its like listening to your brain develop the idea while you quickly take notes before the brain decides to shift its attention to something else. Scott Adams says that you know you have a good idea when you feel a physical sensation in your belly when the idea strikes you. When that happens, grab your notebook and a pencil, and write it down.&lt;/p&gt;

&lt;p&gt;The point is, make a note of good ideas and with as much detail as possible. Doing so will greatly improve the chances of that idea being implemented.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Feature backlog</title>
      <link>https://karecha.com/blog/2012/07/15/feature-backlog/</link>
      <pubDate>Sun, 15 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/07/15/feature-backlog/</guid>
      <description>&lt;p&gt;Joel Spolsky blogs about software development and points out wasteful inventories.&lt;/p&gt;

&lt;p&gt;In the post, he makes an interesting observation about feature backlog:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every product attracts new feature ideas, and you can’t implement ideas as fast as you can think them up, so you write them down, and this list is called the feature backlog. A lot of the ideas on the backlog are bad ideas, and you merely wrote them down to avoid hurting the feelings of the people who thought them up. Backlogs make everyone feel good.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://www.joelonsoftware.com/items/2012/07/09.html&#34; target=&#34;_blank&#34;&gt;The blog post is here.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rescue</title>
      <link>https://karecha.com/blog/2012/06/16/rescue/</link>
      <pubDate>Sat, 16 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/06/16/rescue/</guid>
      <description>&lt;p&gt;Atul Gawande &lt;a href=&#34;http://www.newyorker.com/online/blogs/newsdesk/2012/06/atul-gawande-failure-and-rescue.html&#34; target=&#34;_blank&#34;&gt;talks about&lt;/a&gt; the difference between triumph and defeat.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So you will take risks, and you will have failures. But it’s what happens afterward that is defining. A failure often does not have to be a failure at all. However, you have to be ready for it—will you admit when things go wrong? Will you take steps to set them right?—because the difference between triumph and defeat, you’ll find, isn’t about willingness to take risks. It’s about mastery of rescue.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Mirror</title>
      <link>https://karecha.com/blog/2012/05/29/mirror/</link>
      <pubDate>Tue, 29 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/05/29/mirror/</guid>
      <description>&lt;p&gt;Looking at the profile pictures of people on Facebook and Twitter, I see a pattern. From what I have seen so far, the profile pictures fall into one of the following categories:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Picture of self from the past when they looked much younger/better&lt;/li&gt;
&lt;li&gt;Current picture of self&lt;/li&gt;
&lt;li&gt;Picture of a celebrity&lt;/li&gt;
&lt;li&gt;No picture&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I dont know what to make of the last two, but I have been type 1 until recently, and am trying to move to type 2. Let me explain&amp;hellip;&lt;/p&gt;

&lt;p&gt;When you remember yourself from the past that you like better than your current self, and if you think those days were better than today, then you probably like others to see you the way you looked in those days. That&amp;rsquo;s type 1.&lt;/p&gt;

&lt;p&gt;But if you are happy with yourself today, and that is how you want to project yourself to others, you will tend to put up a recent picture of yourself. That&amp;rsquo;s type 2.&lt;/p&gt;

&lt;p&gt;Up until now, my profile picture used to be from 2004, when I used to be at the peak of my physical fitness (no, not the 6-pack kind &amp;ndash; just less fatter than today). That was the self that I always wanted others to see me as. But I have come to a realization that hanging on to the past will not make my present any better, leave alone the future. I like to think that my tomorrow will be better than today. So I recently changed my profile picture to one that was taken recently. This picture is almost like a mirror in front of me, reminding me of what I look like today. And if that image does not match the image that I want to see, I better do something about it now. Be regular at my daily excercise perhaps.  It is almost like looking in the mirror.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Autosave</title>
      <link>https://karecha.com/blog/2012/05/27/autosave/</link>
      <pubDate>Sun, 27 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/05/27/autosave/</guid>
      <description>&lt;p&gt;My laptop battery has now reached a point where it cannot hold even for a second, and that requires the machine to be connected to the mains all the time. This works as long as it works, until there is a power failure. This happened recently and it was a reminder that things that we now take for granted were different only a few years ago. In those days, we were reminded to save our work frequently and for those unlucky ones who lost an hour or more of work, we would laugh at their plight.&lt;/p&gt;

&lt;p&gt;Now, we don&amp;rsquo;t pay attention to saving frequently because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OS&amp;rsquo;s do not crash often&lt;/li&gt;
&lt;li&gt;Power supply is reliable because the battery on your laptop will give you enough warning before it drains out completely&lt;/li&gt;
&lt;li&gt;Most email clients will autosave your email drafts every few minutes&lt;/li&gt;
&lt;li&gt;Most text editors will save a recovery file that can be used for recovery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recently, for some reason, I turned off the backup file in my Vim editor and realized how misguided that step was when I lost just 10 minutes of work due to a power failure (remember, my laptop battery cannot hold even for a second). Every single minute I spent reproducing the lost text, I kept saving the text while cursing to myself about what had just happened.&lt;/p&gt;

&lt;p&gt;Of course, the solution is simple. Next week, I will find a replacement for the battery and just to be safe, have turned on the backup files in my Vim configuration. I hope to forget about having to repeatedly save files once again.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Test post from Xubuntu</title>
      <link>https://karecha.com/blog/2012/05/26/test-post-from-xubuntu/</link>
      <pubDate>Sat, 26 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/05/26/test-post-from-xubuntu/</guid>
      <description>&lt;p&gt;This is my first post from the Linux system since I moved from Windows to Linux on my work computer. If you are seeing this post, the setup is now complete. But I have to say what a pain it is to get the Octopress setup right, if you are not a ruby developer. But there is no point in complaining too much because Octopress in general is very likable.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Going Linux</title>
      <link>https://karecha.com/blog/2012/03/23/going-linux/</link>
      <pubDate>Fri, 23 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/03/23/going-linux/</guid>
      <description>&lt;p&gt;I recently switched from Windows 7 to Xubuntu at work and am very happy that I did. To be clear, this is not to compare Windows with Linux, but just that as a software engineer I find Linux (with Xfce for desktop management) more fun than any other OS I have used so far.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>App users</title>
      <link>https://karecha.com/blog/2012/02/26/app-users/</link>
      <pubDate>Sun, 26 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/02/26/app-users/</guid>
      <description>&lt;p&gt;The chances of success for an application increases when the following set of people are happy:&lt;/p&gt;

&lt;p&gt;###Administrators&lt;/p&gt;

&lt;p&gt;Administrators want to easily &amp;hellip;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install and uninstall, and does not leave anything behind after uninstall&lt;/li&gt;
&lt;li&gt;Configure and customize system settings&lt;/li&gt;
&lt;li&gt;Keep things updated without crying&lt;/li&gt;
&lt;li&gt;Full control over email support&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;###Policy deciders&lt;/p&gt;

&lt;p&gt;Policy deciders want to &amp;hellip;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Control who can access the application&lt;/li&gt;
&lt;li&gt;Decide who can perform certain operations&lt;/li&gt;
&lt;li&gt;Keep tabs on who has done what&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;###Users&lt;/p&gt;

&lt;p&gt;Users want &amp;hellip;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Customized views of everything&lt;/li&gt;
&lt;li&gt;Instant access to everything&lt;/li&gt;
&lt;li&gt;No interruptions while they are working&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;###Other developers&lt;/p&gt;

&lt;p&gt;Other developers want &amp;hellip;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The ability to extend and script&lt;/li&gt;
&lt;li&gt;A supported API to work with&lt;/li&gt;
&lt;li&gt;Components they can reuse&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is taken entirely from the slides from the talk Christian Hammond &amp;amp; David Trowbridge gave about &lt;a href=&#34;http://www.reviewboard.org/&#34; target=&#34;_blank&#34;&gt;ReviewBoard&lt;/a&gt; in 2008. This talk can be viewed on &lt;a href=&#34;http://www.youtube.com/watch?v=wPpV8icsXL4&#34; target=&#34;_blank&#34;&gt;YouTube here&lt;/a&gt; but I did not find the slides anywhere else and hence wanted to capture this in writing in a blog post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What is your story?</title>
      <link>https://karecha.com/blog/2012/02/03/what-is-your-story/</link>
      <pubDate>Fri, 03 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/02/03/what-is-your-story/</guid>
      <description>&lt;p&gt;It was late one night in Vienna when I was walking the streets with a colleague &amp;ndash; hopping from one pub to the next &amp;ndash; trying out different beers in this beautiful European city. We were there attending a technical conference, and there was nothing much to do after dark except make the most of this time exploring the hosting city. As we walked the streets late into the night, we talked about various things ranging from work, to hobby, to technology in general, and so on. It was then that my colleague asked this question: &amp;ldquo;So, what is your story?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;I was never asked this before, therefore a prepared answer was not available. I remember asking him what that meant. Was this a trick question? After being told that the question meant exactly what it said, i.e. he wanted to know if I had a story to tell about my life &amp;ndash; a story that captured the essence of what the journey has been so far, what have been my influences so far, what and who am I motivated by, what events changed the course of my journey, and most importantly, what am I headed towards. That last part is as important as all the other parts put together. That one thing will say a lot about what I care about and why am I doing what I am doing, and what guides my actions.&lt;/p&gt;

&lt;p&gt;This is powerful stuff and I have thought about this question a lot since. Now I do not make a major decision in life without invoking this question and thinking about how this decision will shape the answer to that question. It has also influenced my day-to-day actions &amp;ndash; sort of helping me answer the question: what do you wake up for?&lt;/p&gt;

&lt;p&gt;If I am ever asked this question again, I have an answer this time. Maybe a long answer, but an answer nonetheless. And that colleague of mine is part of the answer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Code commit on day one</title>
      <link>https://karecha.com/blog/2012/01/21/code-commit-on-day-one/</link>
      <pubDate>Sat, 21 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/01/21/code-commit-on-day-one/</guid>
      <description>&lt;p&gt;As a software developer, what do you expect to accomplish on the first day on your job? Certainly not checking in code. But here is an example of a company where you would be expected to do &lt;a href=&#34;http://www.scottporad.com/2010/11/01/cheezburger-network-doesnt-show-its-new-employees-the-bathroom-until-theyve-checked-in-code/&#34; target=&#34;_blank&#34;&gt;just that&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ok, so why does this matter? In a small to mid sized team, say up 20 people, new engineers do not join your every other week. So why solve the problem of having a new engineer commit code on day one? The answer is: to make this happen, you will need to take a look at and fix/improve multiple things in your software development process; as a result, your team&amp;rsquo;s productivity and effectiveness will improve.&lt;/p&gt;

&lt;p&gt;Here are a few things that are required to make this possible. This list is not comprehensive, but compelling enough for us to take action.&lt;/p&gt;

&lt;p&gt;###Logistics&lt;/p&gt;

&lt;p&gt;####Machine ready
Give your new employee a computer, along with his login credentials and an email account, within 5 minutes of him reporting at work.&lt;/p&gt;

&lt;p&gt;####Software development tools
Provide the location of the team&amp;rsquo;s software tools repository so he can start setting up the development environment, e.g. IDE, source code control, etc.&lt;/p&gt;

&lt;p&gt;###Technical&lt;/p&gt;

&lt;p&gt;####Product&amp;rsquo;s technical documentation
&lt;a href=&#34;http://en.wikipedia.org/wiki/Technical_documentation&#34; target=&#34;_blank&#34;&gt;Technical documentation&lt;/a&gt; is any type of documentation that describes handling, functionality and architecture of a technical product or a product under development or use. For an engineer to be productive on day one, the technical documentation needs to be up to date and readable.&lt;/p&gt;

&lt;p&gt;####Compact code base
Keep the code base clean and compact. It should be possible to checkout a branch (or clone a repository if you are using a distributed source code control like &lt;a href=&#34;http://git-scm.com/&#34; target=&#34;_blank&#34;&gt;Git&lt;/a&gt;) within minutes. This requires that the versioned files do not include derived artifacts or third party libraries. For example, if your application ships java, don&amp;rsquo;t check in the java binaries into the source code control &amp;ndash; archive it in a separate repository instead, from where the packaging script can retrieve it while creating an installer. Most java projects use Maven these days and the jdk binaries are stored in a Maven repository for such projects. Another example is the product documentation, which is usually authored and stored as xml and the end user documentation is generated from these xml files and transformed into pdfs, html, MS Word or other format. Do not version these derived files in your source code control because it bloats your repository without adding value.&lt;/p&gt;

&lt;p&gt;Bottom line: cloning a repository or checking out from a branch should not take more than a few minutes.&lt;/p&gt;

&lt;p&gt;####Code quality
Code needs to be readable, should follow a consistent style, should contain necessary comments (too little comments or too many comments can both work against readability of code &amp;ndash; a fine balance is needed). It should be possible to understand the code (with help of a mentor) on reading it once or twice. If most of the code does not make sense without somebody explaining it in detail, take that as a sign that the code needs to be improved or cleaned up.&lt;/p&gt;

&lt;p&gt;Maintain and follow a coding standard (example &lt;a href=&#34;http://www.cwu.edu/~gellenbe/javastyle/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;) or a code style guide. It is important for the readablity and consistency of your project&amp;rsquo;s source code. The new engineer needs to adhere to this coding style starting with this first commit.&lt;/p&gt;

&lt;p&gt;####Unit test coverage
Almost all of the code needs to be covered by &lt;a href=&#34;http://en.wikipedia.org/wiki/XUnit&#34; target=&#34;_blank&#34;&gt;XUnit&lt;/a&gt; tests. Without a healthy suite of XUnit based unit tests, checking in any new code (even by a senior member of the team) adds risk and every checkin needs to pass the test: &amp;ldquo;Is this change worth the risk?&amp;rdquo; To avoid this situation, a good unit test suite is a must. A few rules about unit tests (see more on &lt;a href=&#34;http://www.agiledata.org/essays/tdd.html&#34; target=&#34;_blank&#34;&gt;Test Driven Development here&lt;/a&gt;):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The entire unit test suite is run as a part of the build every time&lt;/li&gt;
&lt;li&gt;The unit tests do not have any external dependency to ensure that the unit tests can stand on their own.&lt;/li&gt;
&lt;li&gt;Checkins not allowed if there is even one unit test failure&lt;/li&gt;
&lt;li&gt;Every code change that is checked-in accompanies supporting unit test(s).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In absence of the above, the risk of allowing a new engineer to add or change code is simply too high, let alone allowing him to checkin code on day one.&lt;/p&gt;

&lt;p&gt;####System test coverage
Automated system tests are the next level of checks after unit tests. A healthy automated test suite is required to ensure that changes in source code do not generate hours or days of testing to ensure regression has not happened due to the change. Also, if anything is broken, it should be detected as soon as possible. The automated system test suite needs to run at the end of the build and packaging tasks every time. System test failure should be treated seriously and issues found in this phase should be fixed within hours. The team should be in the habit of seeing the system tests pass every time. This can be many times a day or at least once a day as part of the nightly build.&lt;/p&gt;

&lt;p&gt;####Time to compile and run unit tests
The team should have a collective goal to keep the time it takes to build the entire system, down to the smallest duration possible. If it takes the build (which includes code compilation and xunit test run) more than two minutes, take that as a sign to investigate what is taking so long. For example, if you have multiple unit tests which have tests that put the main thread to sleep because it is waiting for a result &amp;ndash; that is a bad test. Either it needs to be reimplemented in a way where waiting is not required, or it is a system test that has been implemented as a unit test.&lt;/p&gt;

&lt;p&gt;The bottom line: compiling your entire project and running the unit tests should complete in a matter of minutes.&lt;/p&gt;

&lt;p&gt;###Conclusion
Even if you don&amp;rsquo;t have new engineers joining your team every week, meet the requirement that it will be possible for a new member of your team to contribute on day one and checkin a fix or a small feature. This will force you to review every aspect of your development process and improve it. Your entire team will benefit from spend more time improving the product than fixing defects. Your business will do better because it will be possible for the team to quickly turn in new features without impacting the quality of the product.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2011</title>
      <link>https://karecha.com/blog/2012/01/01/2011/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/01/01/2011/</guid>
      <description>&lt;p&gt;Here are my highlights for the year 2011. Just want to put this on record while I am still reflecting on the year that was. After this, I will once again turn around and look straight ahead.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;ve been using MacBook for over a year and found my fondness for it grow. Even with continued use, the fascination has not worn off a bit. More I use my MacBook, more I like it. The model I own was discontinued this year, and is no longer available. Newer, faster, thinner MacBook Air has replaced this older plastic MacBook, but I continue to like mine better.&lt;/li&gt;
&lt;li&gt;The natural next step was to figure out how to program a Mac. I did something close, if not exactly the same: developed &lt;a href=&#34;http://figandhoney.com&#34; target=&#34;_blank&#34;&gt;two apps&lt;/a&gt; for iOS, where &lt;a href=&#34;http://mycaterpillarcaravan.tumblr.com&#34; target=&#34;_blank&#34;&gt;Seema&lt;/a&gt; conceived the app and did the artwork. That was fun. As a side effect of developing and publishing these apps on the App Store, I had to create a website for the app which exposed to me a whole new world of web development. These apps have been downloaded more than a 1000 times, which is not a big number by most measures, but it feels good to have touched a thousand peoples&amp;rsquo; lives in some way. Got to do more of this.&lt;/li&gt;
&lt;li&gt;Dabbled a little bit in &lt;a href=&#34;http://jdk7.java.net/&#34; target=&#34;_blank&#34;&gt;Java 7&lt;/a&gt; when it was released. &lt;a href=&#34;https://karecha.com/blog/2011/07/28/java7/&#34;&gt;Filed a bug&lt;/a&gt; in the compiler and saw it fixed in the next update. I thought that was cool.&lt;/li&gt;
&lt;li&gt;On the health and fitness front &amp;ndash; my running milage peaked around mid year and then dropped off completely. At this point, I am probably in the worst shape of my last 10 years (yes, it was even worse before that, but I digress). I need to put this aspect of my life back on track.&lt;/li&gt;
&lt;li&gt;I continued to blog through 2011 and towards the end of the year, merged my two blogs into this one. The reason why people blog is now obvious to me. I agree that it has some sort of a healing property. Every blog post results in a great feeling even when you know there is not much of a readership out there. &lt;a href=&#34;http://www-distance.syr.edu/journal1.html&#34; target=&#34;_blank&#34;&gt;Journaling&lt;/a&gt; is known to have many benefits.&lt;/li&gt;
&lt;li&gt;For the first time in 15 years, I am now without a DSLR camera because I sold it off along with all the lenses. Its time to buy new but am not decided on a particular model. Interesting improvements are underway in the world of DSLRs (for e.g. mirror-less cameras which makes the camera body much thinner than the current models). I will keep watching their moves until I am ready to buy a camera that will stay with me for a long time.&lt;/li&gt;
&lt;li&gt;Finally, this year I am back on &lt;a href=&#34;http://twitter.com/tapankarecha&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt; and am finding it more useful than Facebook or Google+. Even though I continue to use these two &amp;lsquo;social networks&amp;rsquo;, the one that I use regularly is twitter, even for my personal communication with the distributed family.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That was about 2011.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Business as usual</title>
      <link>https://karecha.com/blog/2012/01/01/business-as-usual/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2012/01/01/business-as-usual/</guid>
      <description>&lt;p&gt;As a year ends, and yet another begins, the following is a good reminder:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The thing is, we still live in a world that&amp;rsquo;s filled with opportunity. In fact, we have more than an opportunity &amp;ndash; we have an obligation. An obligation to spend our time doing great things. To find ideas that matter and to share them. To push ourselves and the people around us to demonstrate gratitude, insight, and inspiration. To take risks and to make the world better by being amazing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Seth Godin in a &lt;a href=&#34;http://sethgodin.typepad.com/seths_blog/2011/12/the-chance-of-a-lifetime.html&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Espresso field guide</title>
      <link>https://karecha.com/blog/2011/12/18/espresso-field-guide/</link>
      <pubDate>Sun, 18 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/12/18/espresso-field-guide/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://karecha.com/images/espresso.jpg&#34; alt=&#34;Espresso&#34; title=&#34;Espresso field guide&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;ndash; Source &lt;a href=&#34;http://www.orbitvisual.com/&#34; target=&#34;_blank&#34;&gt;orbitvisual.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moved</title>
      <link>https://karecha.com/blog/2011/12/17/moved/</link>
      <pubDate>Sat, 17 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/12/17/moved/</guid>
      <description>&lt;p&gt;This blog was hosted on &lt;a href=&#34;http://wordpress.com&#34; target=&#34;_blank&#34;&gt;wordpress&lt;/a&gt; until today. Starting with this post, the new home is &lt;a href=&#34;http://pages.github.com/&#34; target=&#34;_blank&#34;&gt;github pages&lt;/a&gt;. Also, my online scrap book, i.e. &lt;a href=&#34;http://nextround.tumblr.com&#34; target=&#34;_blank&#34;&gt;my tumblog&lt;/a&gt;, has also moved here to github pages and is merged with my blog. This makes it easier to maintain the two streams as one. I was paying wordpress for using my personal domain name for the blog, but github allows this for free.&lt;/p&gt;

&lt;p&gt;Another change with this move is that I am using &lt;a href=&#34;http://octopress.org&#34; target=&#34;_blank&#34;&gt;Octopress&lt;/a&gt; to manage my blog posts. This allows me to keep my content archived on my computer, and eliminates the need for backing up the blog &amp;ndash; just in case the service provider closes shop or looses my data for any reason.  With Octopress, I am able to use &lt;a href=&#34;http://en.wikipedia.org/wiki/Markdown&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt; to compose blog posts and that makes it worth all the trouble of moving from wordpress.com to github pages. For the curious, the raw content of the blog can be seen in the markdown format &lt;a href=&#34;https://github.com/tapank/tapank.github.com&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There was an outage for about an hour during the time my domain name switched from looking at my wordpress.com blog to github pages, and this was due to a mistake I comitted while changing the name server entries with my domain registrar. Anyways, thats not a huge problem because this blog gets very few visits. The bigger problem due to this outage was with my email (tapan@karecha.com) which is hosted on Google Apps, and during this time, all emails sent to tapan@karecha.com failed to deliver. I am not sure if any important email was lost during this time &amp;ndash; hope not!&lt;/p&gt;

&lt;p&gt;Finally, everything is back up and running normally.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Making a mark</title>
      <link>https://karecha.com/blog/2011/12/14/making-a-mark/</link>
      <pubDate>Wed, 14 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/12/14/making-a-mark/</guid>
      <description>&lt;p&gt;Paul Graham:
&amp;gt; Graffiti happens at the intersection of ambition and incompetence: people want to make their mark on the world, but have no other way to do it than literally making a mark on the world.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.paulgraham.com/trolls.html&#34; target=&#34;_blank&#34;&gt;Trolls&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Focus</title>
      <link>https://karecha.com/blog/2011/12/02/focus/</link>
      <pubDate>Fri, 02 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/12/02/focus/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The job of the average manager requires shift in focus every few minutes. The
job of the average software developer requires that the developer not shift
focus more often than every few hours.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.amazon.com/gp/aw/d/1572316217&#34; target=&#34;_blank&#34;&gt;Software Project Survival Guide&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Great company</title>
      <link>https://karecha.com/blog/2011/11/30/great-company/</link>
      <pubDate>Wed, 30 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/11/30/great-company/</guid>
      <description>&lt;p&gt;Everybody wants to work for a great company. Few want to make a company
great.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tablet market</title>
      <link>https://karecha.com/blog/2011/11/28/tablet-market/</link>
      <pubDate>Mon, 28 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/11/28/tablet-market/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;PC manufacturers are utterly failing in the tablet market.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Daring Fireball, &lt;a href=&#34;http://daringfireball.net/2011/11/fun_with_numbers&#34; target=&#34;_blank&#34;&gt;Fun with Numbers&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Job security</title>
      <link>https://karecha.com/blog/2011/11/26/job-security/</link>
      <pubDate>Sat, 26 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/11/26/job-security/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Engineers mystify what they do, as a form of job security. Eventually people
figure it out.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://poets.scripting.com/&#34; target=&#34;_blank&#34;&gt;EC2 for Poets&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Food</title>
      <link>https://karecha.com/blog/2011/11/06/food/</link>
      <pubDate>Sun, 06 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/11/06/food/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Eat food. Not too much. Mostly plants.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.amazon.com/Food-Rules-Eaters-Michael-Pollan/dp/014311638X&#34; target=&#34;_blank&#34;&gt;http://www.amazon.com/Food-Rules-Eaters-Michael-Pollan/dp/014311638X&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Interesting lives</title>
      <link>https://karecha.com/blog/2011/11/04/interesting-lives/</link>
      <pubDate>Fri, 04 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/11/04/interesting-lives/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Have you ever noticed that our friends&amp;rsquo; friends have much more interesting
lives than our friends?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; From the book: &lt;a href=&#34;http://www.heathbrothers.com/madetostick/&#34; target=&#34;_blank&#34;&gt;Made to Stick&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Limitations</title>
      <link>https://karecha.com/blog/2011/10/29/limitations/</link>
      <pubDate>Sat, 29 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/10/29/limitations/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Argue for﻿ your limitations and they will be yours to keep.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.youtube.com/watch?v=7JjFn2kMrbM&#34; target=&#34;_blank&#34;&gt;Interview with Richard Bach - YouTube&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learn</title>
      <link>https://karecha.com/blog/2011/10/20/learn/</link>
      <pubDate>Thu, 20 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/10/20/learn/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;You are what you learn&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://dilbert.com/blog/entry/who_are_you/&#34; target=&#34;_blank&#34;&gt;Scott Adams Blog: Who Are You? 10/19/2011&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Modularity</title>
      <link>https://karecha.com/blog/2011/10/13/modularity/</link>
      <pubDate>Thu, 13 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/10/13/modularity/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The modular Unix just keeps conforming to new applications. It helps that
it’s open source but the open sourcing is a result of the modularity not the
cause for it. So far, it looks like there is no stopping the revenge of Unix.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.asymco.com/2010/09/29/unixs-revenge/&#34; target=&#34;_blank&#34;&gt;Unix’s Revenge | asymco&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Broken system</title>
      <link>https://karecha.com/blog/2011/10/10/broken-system/</link>
      <pubDate>Mon, 10 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/10/10/broken-system/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;When I see a broken system, I see an opportunity to build something new and
better that can leap frog the performance of competing governments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://dilbert.com/blog/entry/the_leap_frog_system/&#34; target=&#34;_blank&#34;&gt;Scott Adams Blog: The Leap Frog System 10/10/2011&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Economy</title>
      <link>https://karecha.com/blog/2011/10/10/economy/</link>
      <pubDate>Mon, 10 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/10/10/economy/</guid>
      <description>&lt;p&gt;&amp;ldquo;If the economy were humming along and creating the right kind of jobs, folks
would see wealth as an aspiration and not an enemy.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://dilbert.com/blog/entry/the_leap_frog_system/&#34; target=&#34;_blank&#34;&gt;Scott Adams Blog: The Leap Frog System 10/10/2011&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Concurrency</title>
      <link>https://karecha.com/blog/2011/08/06/concurrency/</link>
      <pubDate>Sat, 06 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/08/06/concurrency/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Multithreaded programming, requiring synchronized access to shared, mutable
state, is the &lt;em&gt;assembly language of concurrency&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; In the book &lt;a href=&#34;http://oreilly.com/catalog/0636920021667&#34; target=&#34;_blank&#34;&gt;Functional Programming for Java Developers&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programmer’s work computer</title>
      <link>https://karecha.com/blog/2011/08/05/programmers-work-computer/</link>
      <pubDate>Fri, 05 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/08/05/programmers-work-computer/</guid>
      <description>&lt;p&gt;Whatever you do for a living, you are skilled at using a toolset in order to get your job done. A surgeon uses surgical tools to perform surgery and these tools are provided by her employer. Think of any profession or job, the norm is: you bring your skills to work, but the tools to get the work done are provided by your employer.&lt;/p&gt;

&lt;p&gt;This is also true for software development industry. If you are a programmer, your computer is chosen, procured and given to you by your employer. You probably have some choice in that you get to pick between a desktop computer or a laptop, but not much beyond that. Corporations make this choice for you purely based on cost. Whatever costs least in the medium to long run wins. Some factors are ignored in this cost analysis because they are hard to quantify: lost productivity due to sloppy performance of computer, lower employee morale due to frustrations arising from unreliability of their computer, etc.&lt;/p&gt;

&lt;p&gt;Why not let the programmer buy a computer for himself? Give him an annual budget and ask him to stay within that budget. If he wants to buy an average desktop and a laptop, its his choice. If he wants to buy a desktop with two LCDs, again his choice. Whatever he wants to buy within that budget, its up to him. Computers are not expensive enough for employers to bother about any more. Free that aspect of the programmer’s experience at work, and he will thank for you for doing that.&lt;/p&gt;

&lt;p&gt;Imposing tools on employees may make sense in industries where the toolsets are standardized to the extent that there is hardly any room for individuality and personal preference. This is certainly not the case in programming / software development industry and hence it does not make any sense to buy computers in bulk and shove one down the throat of every programmer in your organization.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dashboard in OS X</title>
      <link>https://karecha.com/blog/2011/07/30/dashboard-in-os-x/</link>
      <pubDate>Sat, 30 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/30/dashboard-in-os-x/</guid>
      <description>&lt;p&gt;Before &lt;a href=&#34;http://en.wikipedia.org/wiki/Mac_OS_X_Lion&#34; target=&#34;_blank&#34;&gt;OS X Lion&lt;/a&gt;, Dashboard was a nice thing to have. Just hit the shortcut key (usually F4) to bring up Dashboard to quickly take a peek at one or many widgets running there, and hit the key again to hide it. You are back to whatever you were doing before — does not matter which of the many desktops you were on.&lt;/p&gt;

&lt;p&gt;Come Lion, creating a new desktop for a full screen application is as easy as hitting the full screen button (on top right corner of any window). And, side sweep gesture with three or four fingers on the trackpad moves you between multiple desktops. The only drawback with this new ease of navigation is… when I want to go back to the first desktop (to launch a new program or to use any of the open apps on that desktop), I invariably sweep past the first desktop, landing on Dashboard. This is annoying because I expect scrolling to stop once I reach the first desktop because thats my “home desktop” for all practical purposes.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a way out since I can live without Dashboard. Ran these two commands on terminal to disable it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;defaults write com.apple.dashboard mcx-disabled -boolean YES
killall Dock
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jumping between desktops is now fun again.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Uncommon switch-case construct causes java 7 compiler to crash</title>
      <link>https://karecha.com/blog/2011/07/28/uncommon-switch-case-construct-causes-java-7-compiler-to-crash/</link>
      <pubDate>Thu, 28 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/28/uncommon-switch-case-construct-causes-java-7-compiler-to-crash/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://java.sun.com/docs/books/jls/download/langspec-3.0.pdf&#34; target=&#34;_blank&#34;&gt;Java language specification 3.0&lt;/a&gt; defines a switch block as:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The body of a switch statement is known as a switch block. Any statement immediately contained by the switch block may be labeled with one or more case or default labels. These labels are said to be associated with the switch statement, as are the values of the constant expressions in the case labels.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the valid forms of constant expression is: Parenthesized expressions whose contained expression is a constant expression, and examples are:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;case (3):&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;&lt;code&gt;case (1 + 2):&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Java 7 introduces support for strings in switch (part of &lt;a href=&#34;http://openjdk.java.net/projects/coin/&#34; target=&#34;_blank&#34;&gt;project coin&lt;/a&gt;). Using the form of constant expression listed above, with strings in switch, causes javac to crash with a NullPointerException. This is a bug in java 7 compiler and I have reported this in Java bug database.&lt;/p&gt;

&lt;p&gt;Here’s a test program to reproduce the issue:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class Test {
    public static void main(String args[]) {
        switch(args[0]) {
            case(&amp;quot;hello&amp;quot;): // causes javac to crash
                System.out.println(&amp;quot;hello!!&amp;quot;);
                break;
            default:
                System.out.println(&amp;quot;hi!&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running javac Test.java results in:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;An exception has occurred in the compiler (1.7.0).
Please file a bug at the Java Developer Connection
(http://java.sun.com/webapps/bugreport)  after checking
the Bug Parade for duplicates. Include your program
and the following diagnostic in your report.  Thank you.
java.lang.NullPointerException
        at com.sun.tools.javac.comp.Lower.visitStringSwitch(Lower.java:3456)
        at com.sun.tools.javac.comp.Lower.visitSwitch(Lower.java:3357)
        at com.sun.tools.javac.tree.JCTree$JCSwitch.accept(JCTree.java:959)
        at com.sun.tools.javac.tree.TreeTranslator.translate(TreeTranslator.java:58)
        at com.sun.tools.javac.comp.Lower.translate(Lower.java:2160)
        at com.sun.tools.javac.tree.TreeTranslator.translate(TreeTranslator.java:70)
        at com.sun.tools.javac.tree.TreeTranslator.visitBlock(TreeTranslator.java:160)
        at com.sun.tools.javac.comp.Lower.visitBlock(Lower.java:3311)
        at com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:781)
        at com.sun.tools.javac.tree.TreeTranslator.translate(TreeTranslator.java:58)
        at com.sun.tools.javac.comp.Lower.translate(Lower.java:2160)
        at com.sun.tools.javac.tree.TreeTranslator.visitMethodDef(TreeTranslator.java:144)
        at com.sun.tools.javac.comp.Lower.visitMethodDefInternal(Lower.java:2619)
        at com.sun.tools.javac.comp.Lower.visitMethodDef(Lower.java:2538)
        at com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:669)
        at com.sun.tools.javac.tree.TreeTranslator.translate(TreeTranslator.java:58)
        at com.sun.tools.javac.comp.Lower.translate(Lower.java:2160)
        at com.sun.tools.javac.comp.Lower.visitClassDef(Lower.java:2283)
        at com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:591)
        at com.sun.tools.javac.tree.TreeTranslator.translate(TreeTranslator.java:58)
        at com.sun.tools.javac.comp.Lower.translate(Lower.java:2160)
        at com.sun.tools.javac.comp.Lower.translate(Lower.java:2180)
        at com.sun.tools.javac.comp.Lower.translateTopLevelClass(Lower.java:3650)
        at com.sun.tools.javac.main.JavaCompiler.desugar(JavaCompiler.java:1393)
        at com.sun.tools.javac.main.JavaCompiler.desugar(JavaCompiler.java:1271)
        at com.sun.tools.javac.main.JavaCompiler.compile2(JavaCompiler.java:870)
        at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:829)
        at com.sun.tools.javac.main.Main.compile(Main.java:417)
        at com.sun.tools.javac.main.Main.compile(Main.java:331)
        at com.sun.tools.javac.main.Main.compile(Main.java:322)
        at com.sun.tools.javac.Main.compile(Main.java:76)
        at com.sun.tools.javac.Main.main(Main.java:61)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Leaving out the opening or closing parenthesis does give a valid compilation error, indicating that parenthesis is valid with string literals in a constant expression.&lt;/p&gt;

&lt;p&gt;The build I am using is release candidate and will most likely ship with this bug:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\&amp;gt;java -version
java version &amp;quot;1.7.0&amp;quot;
Java(TM) SE Runtime Environment (build 1.7.0-b147)
Java HotSpot(TM) Client VM (build 21.0-b17, mixed mode, sharing)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have not tried this on a system other than my Windows 7 laptop, but this bug does not seem to be platform specific. In any case, here is some detail about my system:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NUMBER_OF_PROCESSORS=2
OS=Windows_NT
PROCESSOR_ARCHITECTURE=AMD64
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 23 Stepping 6, GenuineIntel
PROCESSOR_LEVEL=6
PROCESSOR_REVISION=1706
ProgramData=C:\ProgramData
ProgramFiles=C:\Program Files
ProgramFiles(x86)=C:\Program Files (x86)
ProgramW6432=C:\Program Files
SESSIONNAME=Console
SystemDrive=C:
SystemRoot=C:\Windows
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The bug id is &lt;a href=&#34;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7071246&#34; target=&#34;_blank&#34;&gt;7071246&lt;/a&gt;, but is not visible to the public yet. In an email, Oracle says this will be visible only after it is reviewed &lt;em&gt;and&lt;/em&gt; does not pose a security concern.&lt;/p&gt;

&lt;p&gt;Though using parenthesis in case labels is very uncommon, if one does use it in the form explained above, it is impossible to tell from the error message what or where the issue is. An issue if you are compiling a code base with hundreds or thousands of java classes.&lt;/p&gt;

&lt;p&gt;[Update = &amp;ldquo;the bug is now posted on the java bug database in the public domain]&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tricks for engineering your own happiness</title>
      <link>https://karecha.com/blog/2011/07/17/tricks-for-engineering-your-own-happiness/</link>
      <pubDate>Sun, 17 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/17/tricks-for-engineering-your-own-happiness/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Scott_Adams&#34; target=&#34;_blank&#34;&gt;Scott Adams&lt;/a&gt;&amp;rsquo; tricks for
engineering your own happiness. Condensed from a &lt;a href=&#34;http://dilbert.com/blog/entry/happiness_engineering&#34; target=&#34;_blank&#34;&gt;blog
post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Food&lt;/strong&gt; - When you feel agitated, try eating some carbs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exercise&lt;/strong&gt; - Think of exercise as the difference between a good day and a bad day. That is reason enough to exercise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goals&lt;/strong&gt; - Have at least one project brewing at all times that has a non-zero chance of changing the planet, or making a billion dollars, or both. That is a good feeling to wake up to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Meaning&lt;/strong&gt; - First, achieve personal success. Once you reach a more comfortable level, be useful to others in order to find meaning and feel right in your own skin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positivity&lt;/strong&gt; - Have an ongoing positive dialog with yourself. Do not incorporate negativity even in your humor. Saying positive things puts your mind into a positive state and attracts positive relationships and positive outcomes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Little Bit of Danger&lt;/strong&gt; - Make it a habit to try new things, even if those things scare you a bit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn&lt;/strong&gt; - Feed your brain. The more active your brain is, the more alive you will feel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feel Success&lt;/strong&gt; - Make it a habit to often do things you do well. It doesn&amp;rsquo;t matter what that is but doing one thing well gives your ego armor to handle the little things that don&amp;rsquo;t go quite so well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relationships&lt;/strong&gt; - Follow the other tips for happiness to attract the sort of relationships you want.&lt;/p&gt;

&lt;p&gt;Happiness can be engineered, and luck is a product of good design.&lt;/p&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://dilbert.com/blog/entry/happiness_engineering&#34; target=&#34;_blank&#34;&gt;Read the original blog post&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Software design</title>
      <link>https://karecha.com/blog/2011/07/15/software-design/</link>
      <pubDate>Fri, 15 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/15/software-design/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;one purpose of software design is to give yourself more of the system you can
safely ignore when making any given change&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://en.wikipedia.org/wiki/Kent_Beck&#34; target=&#34;_blank&#34;&gt;Kent Beck&lt;/a&gt; via a &lt;a href=&#34;http://twitter.com/#!/KentBeck/status/91670420280967168&#34; target=&#34;_blank&#34;&gt;tweet&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advice</title>
      <link>https://karecha.com/blog/2011/07/13/advice/</link>
      <pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/13/advice/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The advice is often to “Go away and learn C, and come back when you’re done!”
The aim of this book is to offer a different path.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.timisted.net/blog/about/&#34; target=&#34;_blank&#34;&gt;Tim Isted&lt;/a&gt; in &lt;a href=&#34;http://pragprog.com/book/tibmac/beginning-mac-programming&#34; target=&#34;_blank&#34;&gt;Beginning Mac Programming&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Anything</title>
      <link>https://karecha.com/blog/2011/07/13/anything/</link>
      <pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/13/anything/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;As soon as you say you will take anything, you will really take anything.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.merlinmann.com/&#34; target=&#34;_blank&#34;&gt;Merlin Mann&lt;/a&gt; in &lt;a href=&#34;http://5by5.tv/b2w/24&#34; target=&#34;_blank&#34;&gt;Back to Work Episode 24&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google&#43; : My first impressions</title>
      <link>https://karecha.com/blog/2011/07/12/google---my-first-impressions/</link>
      <pubDate>Tue, 12 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/12/google---my-first-impressions/</guid>
      <description>

&lt;p&gt;After using Google+ for a day, here are my first impressions.&lt;/p&gt;

&lt;h2 id=&#34;the-good-parts&#34;&gt;The good parts:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Google+ connections are modeled on Twitter.&lt;/em&gt; A ‘handshake’ is not necessary for two people to connect. Just follow people on Google+ without having them to first approve the connection by accepting a ‘friend request’.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Quick and easy way to define an audience for each post.&lt;/em&gt; If a post is marked as public, everybody can read that post — even those who do not have a Google+ account. Restrict the audience of a post by marking its visibility to a group of people. (Groups are called ‘circles’ in Google+ lingo and is a convenient way for grouping people into separate buckets like: family, work, etc. Adding a person to multiple circles is allowed.)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Posts are not limited to Google+ users.&lt;/em&gt; A message is posted to circle(s) and a circle can contain email ids, and the message to those people is email’d to them. (Google+ users receive emails too, but there is an option to turn off the email notifications in the settings.)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;No restriction on the length of a post.&lt;/em&gt; A post does not have a fixed character limit. (This cannot be infinite, but is good enough for most purposes.)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;No advertisements [yet].&lt;/em&gt; Even when they do add advertisements, Google will likely not make it too loud. They have set a good example in the way they place advertisements in Google search results and in Gmail.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Many tech nerds and geeks who are internet celebrities, are embracing Google+.&lt;/em&gt; This is a big plus because I follow some of them. Somehow, they never quite took off on Facebook for things they wanted to say publicly. (Many do have Facebook accounts, but they use it mostly for personal communication.)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Hangout allows group video chat.&lt;/em&gt; This will be useful when enough of my friends join Google+.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;google-can-improve&#34;&gt;Google+ can improve:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Poor support for formatting posts.&lt;/em&gt; I would like to see more formatting options for posts. Because the length of a post is not limited, people can write lengthy — blog style — posts which can benefit from having some formatting — like title of the post, headers of sections, bullet point lists, block quotes etc. Until then, Google+ is not a viable option for small time bloggers. But that is not the only reason to have good formatting capabilities. (Markdown support would be super.)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Poor support for keyboard shortcuts.&lt;/em&gt; I would like to see improvements in keyboard shortcuts. Basic keyboard based navigation is available, but I could not find anything that enables quick posts.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Suggested names can be more useful.&lt;/em&gt; I would like to see improvements in the suggested names drop down list. Starting a word with + or @ in a post prompts Google+ to help out with auto completing of names. This is done by showing matching names as I type characters following + or @. This is a good thing but the list of names that it brings up in a drop down list is from all over Google+, including names of people I follow. People I follow do not get a priority in their placement in this list. The drop down list will be more useful if it first listed matching names from people I follow, and only if there are not enough names from that group to fill the list, it then lists matching names of people who I do not follow.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Poor lineup of native apps.&lt;/em&gt; Support for native apps on popular platforms is needed. Especially iOS, Mac OS X and Windows. (Android already seems to have an app.)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Something</title>
      <link>https://karecha.com/blog/2011/07/11/something/</link>
      <pubDate>Mon, 11 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/11/something/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Be a fan of SOMEthing, or you will fall for ANYthing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; A footnote at this &lt;a href=&#34;http://americanmccarver.com/&#34; target=&#34;_blank&#34;&gt;sports blog&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Negotiation</title>
      <link>https://karecha.com/blog/2011/07/10/negotiation/</link>
      <pubDate>Sun, 10 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/10/negotiation/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Negotiation isn’t just a cost because nobody knows what they need.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.threeriversinstitute.org/blog/?p=420&#34; target=&#34;_blank&#34;&gt;On negotiation&lt;/a&gt; by &lt;a href=&#34;http://twitter.com/#/kentbeck&#34; target=&#34;_blank&#34;&gt;Kent Beck&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Questions</title>
      <link>https://karecha.com/blog/2011/07/06/questions/</link>
      <pubDate>Wed, 06 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/06/questions/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The questions we ask are more important than the answers we give, since the
questions determine the potential range of answers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Anonymous&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More is not better</title>
      <link>https://karecha.com/blog/2011/07/03/more-is-not-better/</link>
      <pubDate>Sun, 03 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/03/more-is-not-better/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;More is not better. Indeed, your greatest challenge will be resisting the
temptation to do more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://en.wikipedia.org/wiki/Timothy_Ferriss&#34; target=&#34;_blank&#34;&gt;Tim Ferriss&lt;/a&gt; in &lt;a href=&#34;http://www.fourhourbody.com/&#34; target=&#34;_blank&#34;&gt;The 4 Hour Body&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cats</title>
      <link>https://karecha.com/blog/2011/07/02/cats/</link>
      <pubDate>Sat, 02 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/02/cats/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;I find that trying to talk to my cats about anything is frustrating. As soon
as they notice they&amp;rsquo;re getting some attention, they&amp;rsquo;ll come and brush against
me and try to lure me to the kitchen where all the food is.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://c2.com/cgi/wiki?RubberDucking&#34; target=&#34;_blank&#34;&gt;Rubber Ducking&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Solution</title>
      <link>https://karecha.com/blog/2011/07/02/solution/</link>
      <pubDate>Sat, 02 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/07/02/solution/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Once a problem is described in sufficient detail, its solution is obvious.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://c2.com/cgi/wiki?KentBeck&#34; target=&#34;_blank&#34;&gt;Kent Beck&lt;/a&gt; (see &lt;a href=&#34;http://c2.com/cgi/wiki?RubberDucking&#34; target=&#34;_blank&#34;&gt;Rubber Ducking&lt;/a&gt; at &lt;a href=&#34;http://c2.com/&#34; target=&#34;_blank&#34;&gt;c2.com&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Engineer</title>
      <link>https://karecha.com/blog/2011/06/18/engineer/</link>
      <pubDate>Sat, 18 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/06/18/engineer/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;As an engineer, you have a depth of knowledge about your systems and projects
that no managers can possibly have. With that knowledge comes the
responsibility to &lt;em&gt;act&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://cleancoder.posterous.com/&#34; target=&#34;_blank&#34;&gt;Uncle Bob&lt;/a&gt; in his new book &lt;a href=&#34;http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&#34; target=&#34;_blank&#34;&gt;The Clean Coder&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>15 minutes a day</title>
      <link>https://karecha.com/blog/2011/06/17/15-minutes-a-day/</link>
      <pubDate>Fri, 17 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/06/17/15-minutes-a-day/</guid>
      <description>&lt;p&gt;Getting started on something new can be challenging. While it is surprising, it is true, that one would find it difficult to get started on a project of their own choosing. Typical examples of new projects are: exercise, new business, new job, new skill, quitting a bad habit, etc. Why would it be difficult to embark upon a journey that you actually want to begin? The strongest reasons are the fear of unknown, and the fear of failure.&lt;/p&gt;

&lt;p&gt;15 minutes a day method helps overcome the inertia and helps one get over the hump. Simple rules to follow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spend 15 minutes every day on your new project&lt;/li&gt;
&lt;li&gt;During this phase, avoid rating your experience of performing that activity&lt;/li&gt;
&lt;li&gt;Do not miss a single day&lt;/li&gt;
&lt;li&gt;Even if you start enjoying your new project/activity a lot, resist the temptation of going beyond 15 minutes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It takes &lt;a href=&#34;http://karecha.com/2009/02/14/forming-a-habit-in-21-days/&#34; target=&#34;_blank&#34;&gt;21 days&lt;/a&gt; to form a habit. In those 21 days, follow this rule of 15 minutes a day and get over that hump.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Industry awards</title>
      <link>https://karecha.com/blog/2011/06/15/industry-awards/</link>
      <pubDate>Wed, 15 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/06/15/industry-awards/</guid>
      <description>&lt;p&gt;Businesses covet industry awards for multiple reasons. These help boost visibility of the company or the award winning product to different audiences, for instance:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Existing and potential customers; and&lt;/li&gt;
&lt;li&gt;Potential employees&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Upon receiving an award, it is perfectly normal and even desirable to turn to any of the above and make sure they are aware of this award. It is a moment of pride, and should be relished as such. It should also be advertised as such.&lt;/p&gt;

&lt;p&gt;But if you want an award that you can bring to your existing employees to make them proud and happy, then stop. That industry award will not cut it. [I am assuming you have all the other variables under control: salary, work/life balance, good work environment etc.] Your existing employees want just one award: being proud of what they produce. Unless that experience trumps all their other experiences at work, they will never quite feel as rewarded as you want them to do.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mission statement</title>
      <link>https://karecha.com/blog/2011/06/14/mission-statement/</link>
      <pubDate>Tue, 14 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/06/14/mission-statement/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;We don’t have investors to impress, so we don’t need a “mission statement.”
We enjoy writing and shipping great products that address the needs of
ourselves and our customers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.barebones.com/company/&#34; target=&#34;_blank&#34;&gt;http://www.barebones.com/company/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>7 rules for making more happiness</title>
      <link>https://karecha.com/blog/2011/06/04/7-rules-for-making-more-happiness/</link>
      <pubDate>Sat, 04 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/06/04/7-rules-for-making-more-happiness/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Thinking about ideas and content freely - with the deadline far away

&lt;ul&gt;
&lt;li&gt;Traveling to new places&lt;/li&gt;
&lt;li&gt;Using a wide variety of tools and techniques&lt;/li&gt;
&lt;li&gt;Working on projects that matter to me&lt;/li&gt;
&lt;li&gt;Having things come back from the printer done well&lt;/li&gt;
&lt;li&gt;Getting feedback from people who see our work&lt;/li&gt;
&lt;li&gt;Designing a project that feels partly brand new and partly familiar&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Great company</title>
      <link>https://karecha.com/blog/2011/06/03/great-company/</link>
      <pubDate>Fri, 03 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/06/03/great-company/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Everybody wants to work for a great company. Few want to make a company great.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Who do you work for?</title>
      <link>https://karecha.com/blog/2011/06/03/who-do-you-work-for/</link>
      <pubDate>Fri, 03 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/06/03/who-do-you-work-for/</guid>
      <description>&lt;p&gt;Who do you work for? The company that employs you, or the business within the company that you are part of, or the team that you belong to, or the technology that you work on, or any of the people in the management chain all the way up to CEO of your company? The answer to this question is never straightforward and changes from time to time, and from situation to situation. The simple answer is: it depends.&lt;/p&gt;

&lt;p&gt;My view is that all of the above matter. Not necessarily to the same degree but they all matter nonetheless. You are lucky if what matters most to you results in the best outcome for you — both in terms of compensation and job satisfaction.&lt;/p&gt;

&lt;p&gt;However, you need to pick one out of the above so you can check from time to time if its still worth continuing in your current job. I think, happiest are those who focus in their job on creating a great product or technology.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talking</title>
      <link>https://karecha.com/blog/2011/05/18/talking/</link>
      <pubDate>Wed, 18 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/05/18/talking/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The more we talk, the less appealing we become.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://dilbert.com/blog/entry/slowing_the_decline_in_your_personal_appeal/&#34; target=&#34;_blank&#34;&gt;Scott Adams in a blog post&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Snark</title>
      <link>https://karecha.com/blog/2011/05/16/snark/</link>
      <pubDate>Mon, 16 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/05/16/snark/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Just the place for a Snark! I have said it twice:&lt;/p&gt;

&lt;p&gt;That alone should encourage the crew.&lt;/p&gt;

&lt;p&gt;Just the place for a Snark! I have said it thrice:&lt;/p&gt;

&lt;p&gt;What I tell you three times is true.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ebooks.adelaide.edu.au/c/carroll/lewis/snark/index.html&#34; target=&#34;_blank&#34;&gt;The Hunting of the Snark&lt;/a&gt; by &lt;a href=&#34;http://en.wikipedia.org/wiki/Lewis_Carroll&#34; target=&#34;_blank&#34;&gt;Lewis Carroll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://karecha.com/blog/2011/05/13/process/</link>
      <pubDate>Fri, 13 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/05/13/process/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Laying down a process is the easy part. Applying that process to a project is
the hard part.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Automatic</title>
      <link>https://karecha.com/blog/2011/05/07/automatic/</link>
      <pubDate>Sat, 07 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/05/07/automatic/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;If you find yourself going through your project on automatic, without
thinking about what you’re doing, then &lt;em&gt;you aren’t thinking&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.pragprog.com/magazines/2011-05/guru-meditation&#34; target=&#34;_blank&#34;&gt;Guru Meditation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Extraordinary</title>
      <link>https://karecha.com/blog/2011/05/07/extraordinary/</link>
      <pubDate>Sat, 07 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/05/07/extraordinary/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Extraordinary claims require extraordinary evidence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.asymco.com/processes/&#34; target=&#34;_blank&#34;&gt;Processes | asymco&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Support</title>
      <link>https://karecha.com/blog/2011/04/30/support/</link>
      <pubDate>Sat, 30 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/04/30/support/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Seeking &amp;ldquo;support&amp;rdquo; is Resistance at its most seductive.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Robert McKee in the Forward to the book &lt;a href=&#34;http://www.amazon.com/War-Art-Through-Creative-Battles/dp/0446691437/&#34; target=&#34;_blank&#34;&gt;The War of Art: Break Through the Blocks and Win Your Inner Creative Battles&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Perception of time</title>
      <link>https://karecha.com/blog/2011/04/24/perception-of-time/</link>
      <pubDate>Sun, 24 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/04/24/perception-of-time/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.newyorker.com/reporting/2011/04/25/110425fa_fact_bilger&#34; target=&#34;_blank&#34;&gt;On perception of time&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why time seems to pass faster as we get older&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The more detailed the memory, the longer the moment seems to last. “This
explains why we think that time speeds up when we grow older,” Eagleman
said—why childhood summers seem to go on forever, while old age slips by while
we’re dozing. The more familiar the world becomes, the less information your
brain writes down, and the more quickly time seems to pass.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>State of mind</title>
      <link>https://karecha.com/blog/2011/04/24/state-of-mind/</link>
      <pubDate>Sun, 24 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/04/24/state-of-mind/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.asymco.com/2011/04/23/a
-new-era-is-only-a-new-state-of-mind&#34; target=&#34;_blank&#34;&gt;A new era is only a new state of mind&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Its hard for companies to let go of their past successes&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What makes a company successful with innovation long term is to always keep
innovating. Often coming up with the next big thing means damaging the old
thing. That’s hard to do for many companies so they don’t do it and somebody
else does. This is why great companies end up as formerly-great companies.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Stand up</title>
      <link>https://karecha.com/blog/2011/04/23/stand-up/</link>
      <pubDate>Sat, 23 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/04/23/stand-up/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://opinionator.blogs.nytimes.com/2010/02/23/stand-up-while-you-
read-this/&#34; target=&#34;_blank&#34;&gt;Stand up while you read this!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The writing on the wall is clear&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It doesn’t matter if you go running every morning, or you’re a regular at
the gym. If you spend most of the rest of the day sitting — in your car, your
office chair, on your sofa at home — you are putting yourself at increased
risk of obesity, diabetes, heart disease, a variety of cancers and an early
death. In other words, irrespective of whether you exercise vigorously,
sitting for long periods is bad for you.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Uptime</title>
      <link>https://karecha.com/blog/2011/04/21/uptime/</link>
      <pubDate>Thu, 21 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/04/21/uptime/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.marco.org/2011/04/21/big-ec2-downtime&#34; target=&#34;_blank&#34;&gt;Amazon EC2 having issues&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It might be easy to say, “Don’t host on EC2 because things like this
happen.” But there’s no such thing as perfect uptime.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Trump</title>
      <link>https://karecha.com/blog/2011/04/20/trump/</link>
      <pubDate>Wed, 20 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/04/20/trump/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://dilbert.com/blog/entry/donald_trump_magnificent_bastard/&#34; target=&#34;_blank&#34;&gt;Scott Adams on Donald Trump&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I never thought of Donald Trump this way&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Granted, many people are turned off by Trump’s pomposity. He knows that. But
he also knows that success doesn’t come from bland acceptance by the entire
world. It comes from the ability to inspire the few. He’s nailing that part. I
just spent my morning writing about him.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Pasta</title>
      <link>https://karecha.com/blog/2011/04/16/pasta/</link>
      <pubDate>Sat, 16 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/04/16/pasta/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.geometryofpasta.co.uk/&#34; target=&#34;_blank&#34;&gt;Geometry of Pasta&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pasta recipes in a tastefully designed website&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scala</title>
      <link>https://karecha.com/blog/2011/04/16/scala/</link>
      <pubDate>Sat, 16 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/04/16/scala/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Scala sets a new standard against which future languages will be measured.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.gafter.com/~neal/&#34; target=&#34;_blank&#34;&gt;Neal Gafter&lt;/a&gt; in foreword to &lt;a href=&#34;http://amzn.com/0981531644&#34; target=&#34;_blank&#34;&gt;Programming in Scala&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why open source</title>
      <link>https://karecha.com/blog/2011/04/09/why-open-source/</link>
      <pubDate>Sat, 09 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/04/09/why-open-source/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.marco.org/4458987911&#34; target=&#34;_blank&#34;&gt;Why open source? Here&amp;rsquo;s why&amp;hellip;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every company has its own reason for open sourcing some and protecting some.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ideas</title>
      <link>https://karecha.com/blog/2011/04/04/ideas/</link>
      <pubDate>Mon, 04 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/04/04/ideas/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;All ideas suck, because they are just ideas. They’re worth nothing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Wil Shipley in &lt;a href=&#34;http://blog.wilshipley.com/2011/04/success-and-farming-vs-mining.html&#34; target=&#34;_blank&#34;&gt;Success, and Farming Vs. Mining&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Happiness</title>
      <link>https://karecha.com/blog/2011/03/17/happiness/</link>
      <pubDate>Thu, 17 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/03/17/happiness/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Happiness Can Be Engineered&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://dilbert.com/blog/entry/happiness_engineering/&#34; target=&#34;_blank&#34;&gt;Scott Adams Blog: Happiness Engineering 03/17/2011&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New possibilities</title>
      <link>https://karecha.com/blog/2011/02/26/new-possibilities/</link>
      <pubDate>Sat, 26 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/02/26/new-possibilities/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.apple.com/thunderbolt/&#34; target=&#34;_blank&#34;&gt;Thunderbolt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This opens new possiblities.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Product release</title>
      <link>https://karecha.com/blog/2011/02/25/product-release/</link>
      <pubDate>Fri, 25 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/02/25/product-release/</guid>
      <description>&lt;p&gt;The team is working on an upcoming product release. Long days and late nights. Sometimes weekends too. There is so much to do, but so little time! What&amp;rsquo;s more — the test team is finding bugs as if there is no tomorrow. This is the time when developers are thinking about so many things that could have been done differently. &amp;lsquo;Maybe we should have thought through a few things before&amp;rsquo;, they say. And they are right. If we were to relive this release; if we could go back in time; if we could do this all over again….. it would be another story. A much better story. Every feature would be designed better. The code would be much cleaner. There would be fewer defects. And life would be much better.&lt;/p&gt;

&lt;p&gt;This is not the time to think about what could have been done differently. This is the time to put our heads down and get back to work. The defect backlog needs to be contained. And we must do this while defect arrival rate shows no sign of slowing. We must release the product on schedule. That’s one non negotiable.&lt;/p&gt;

&lt;p&gt;While this is happening, engineers are also thinking ahead. What will we do differently next time? How will the next release be better than this one? What lessons have we learnt from our mistakes this time? Ah, here are a few things we will definitely do differently. We will be careful to avoid feature bloat. We will analyze requirements better next time. We will plan ahead. Hey, how about starting to write unit tests as we code? Yes, that &lt;a href=&#34;http://junit.sourceforge.net/&#34; target=&#34;_blank&#34;&gt;JUnit&lt;/a&gt; the world has been using for almost a decade now. We should probably adopt &lt;a href=&#34;http://martinfowler.com/articles/continuousIntegration.html&#34; target=&#34;_blank&#34;&gt;continuous integration&lt;/a&gt; (CI) for a change. It would be great if every checkin could be validated with a rapid feedback of build status, unit test results and acceptance tests results. That will require automated system tests too. Shit, we dont have hardware to spare for all that stuff. But we will figure that out. In fact, we will have to figure that out, because there is no doubt CI will improve team productivity. &lt;a href=&#34;http://jenkins-ci.org/&#34; target=&#34;_blank&#34;&gt;Jenkins&lt;/a&gt; seems to fit the bill. It seems to be working for many teams, there’s no reason it will not work for us.&lt;/p&gt;

&lt;p&gt;Sweet. The next release is going to be so much better.&lt;/p&gt;

&lt;p&gt;Hey, we are not done with this release yet. Some new defects arrived while we were day dreaming about the next release, and these defects need to be thrashed out now. Get back to work folks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Memo</title>
      <link>https://karecha.com/blog/2011/02/09/memo/</link>
      <pubDate>Wed, 09 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/02/09/memo/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;That makes it one of the most exciting and interesting CEO memos we&amp;rsquo;ve ever
seen.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.engadget.com/2011/02/08/nokia-ceo-stephen-elop-rallies-troops-in-brutally-honest-burnin/&#34; target=&#34;_blank&#34;&gt;Engadget on Nokia CEO&amp;rsquo;s Memo&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Interview</title>
      <link>https://karecha.com/blog/2011/01/31/interview/</link>
      <pubDate>Mon, 31 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/01/31/interview/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.newsweek.com/1985/09/30/jobs-
talks-about-his-rise-and-fall.print.html&#34; target=&#34;_blank&#34;&gt;Jobs Interview [1985] - Newsweek&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I can be very intense in my convictions. And I don&amp;rsquo;t know; all in all, I
kind of like myself and I&amp;rsquo;m not that anxious to change.&lt;/p&gt;

&lt;p&gt;&amp;ndash; Steve Jobs&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Tax</title>
      <link>https://karecha.com/blog/2011/01/29/tax/</link>
      <pubDate>Sat, 29 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/01/29/tax/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://online.wsj.com/article/SB100014240527487032932045
76106164123424314.html?mod=WSJ_hp_MIDDLENexttoWhatsNewsForth&#34; target=&#34;_blank&#34;&gt;How to Tax the Rich&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Only crazy people imagine that bad ideas can suddenly become good if you keep
trying them.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Products</title>
      <link>https://karecha.com/blog/2011/01/27/products/</link>
      <pubDate>Thu, 27 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2011/01/27/products/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.asymco.com/2011/01/27/76-billion-a-year-
from-a-tableful-of-products/&#34; target=&#34;_blank&#34;&gt;A tableful of products&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All the products Apple sells can fit on one average sized kitchen table and
they generated $76 billion in sales last year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The next ten years</title>
      <link>https://karecha.com/blog/2010/12/12/the-next-ten-years/</link>
      <pubDate>Sun, 12 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/12/12/the-next-ten-years/</guid>
      <description>&lt;p&gt;This year, think of the &lt;a href=&#34;http://howardlindzon.com/the-next-
ten-years/&#34; target=&#34;_blank&#34;&gt;next ten years&lt;/a&gt;, and not just the next year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Leading</title>
      <link>https://karecha.com/blog/2010/10/19/leading/</link>
      <pubDate>Tue, 19 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/10/19/leading/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;You can’t lead in the abstract. You have to get skin in the game.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Scott Burken in a &lt;a href=&#34;http://www.scottberkun.com/blog/2010/ozzie-microsoft-and-change/&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fame and riches</title>
      <link>https://karecha.com/blog/2010/10/12/fame-and-riches/</link>
      <pubDate>Tue, 12 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/10/12/fame-and-riches/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The path to fame and riches in the computer world is through what you do, not
who you know.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Ian Lance Taylor in a &lt;a href=&#34;http://www.airs.com/blog/archives/417&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://karecha.com/blog/2010/09/24/testing/</link>
      <pubDate>Fri, 24 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/09/24/testing/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Just because there is something we need to do, and there is something else
that we can measure, we should not start to think that the thing we can
measure will tell us what we need to do.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.airs.com/blog/archives/408&#34; target=&#34;_blank&#34;&gt;School Testing&lt;/a&gt; by Ian Lance Taylor&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTML5 test</title>
      <link>https://karecha.com/blog/2010/09/23/html5-test/</link>
      <pubDate>Thu, 23 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/09/23/html5-test/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://www.html5test.com/&#34; target=&#34;_blank&#34;&gt;HTML5 Test&lt;/a&gt; – how well does your browser support HTML5?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hiring: the best candidate v/s good enough</title>
      <link>https://karecha.com/blog/2010/09/21/hiring-the-best-candidate-v/s-good-enough/</link>
      <pubDate>Tue, 21 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/09/21/hiring-the-best-candidate-v/s-good-enough/</guid>
      <description>

&lt;p&gt;In a manager’s life, hiring and [depending on which part of the world you live in,] firing are necessary evils. You never quite enjoy doing any of these, but you have to do it anyway. Firing is always difficult, irrespective of whether it is driven by business reasons or by performance reasons. But hiring can be difficult too especially if you are doing it a lot because it tends to quickly become mundane and boring after you have spoken to a few candidates. You reach a point where you are spending more time analyzing and comparing candidates while you should be spending time comparing, analyzing and prioritizing new features or triaging defects. You are eager to close the hiring because your business is waiting for you to fill up the open position else the budget will go away, or because your team is desperate to have this new engineer to do a job that nobody on the team wants to do. In any case, there is tremendous pressure to close the hiring and to do it in a way that you will not regret down the road. There are two different approaches to choose from that will guide you through the process:&lt;/p&gt;

&lt;h2 id=&#34;hire-the-best-candidate-sounds-good&#34;&gt;Hire the best candidate (&lt;em&gt;sounds good!&lt;/em&gt;)&lt;/h2&gt;

&lt;p&gt;What do you do if the first candidate you interviewed is good enough? If you are like most managers, you will not stop there because doing so will look (to you and to others around you) like you took the easy way out. What if this candidate does not turn out to be the star you had hoped for? So you continue to talk to more candidates until you think you have spoken to enough of them to make a good hiring decision. That, I call, hiring the best candidate. You select the best of the lot. It feels right because no one can blame you for not screening enough candidates. You were thorough and hence would have made the best possible choice. You hired the best candidate. Sounds good!&lt;/p&gt;

&lt;h2 id=&#34;hire-the-good-enough-candidate-sounds-awful&#34;&gt;Hire the good enough candidate (&lt;em&gt;sounds awful!&lt;/em&gt;)&lt;/h2&gt;

&lt;p&gt;The other approach to hiring is to go for a candidate that is good enough. Not the best, but just good enough. You start the hiring process with a very clear picture of what you are looking for and once you find a candidate that fits the bill, including having the right attitude which is necessary for his long term success in a team setting, you go for that candidate. In this approach, it is never too soon or too late to make the hiring decision. If the first candidate you talk to fits the bill, you call it done and go for that candidate. On the other extreme, if you do not find a good fit even after you have spent enough time talking to an array of candidates, you don’t give in to the temptation of hiring the best among the sample that you interviewed. It’s ok to end up saying that you do not want to hire at this time because you did not find a suitable candidate! Go back and reevaluate if you really need this position to be filled externally. There can be many options including training and ramping up an internal candidate for this position while you hire to replace that internal candidate. Now you can start the search with a new job description which may help make your search more fruitful this time around. Bottom line – hire a good enough candidate. Sounds awful.&lt;/p&gt;

&lt;h2 id=&#34;a-matter-of-choice&#34;&gt;A matter of choice&lt;/h2&gt;

&lt;p&gt;I tend to lean towards the second approach as far as I can, but the way most modern day corporations are structured, that is usually not an option. When a a position is opened for hiring, the expectation is to fill that position within a predetermined duration (typically between 1 and 2 months). This almost always forces the hiring manager to take the first approach, i.e. hire the best candidate. Remember — the best may not be good enough.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Code formatting</title>
      <link>https://karecha.com/blog/2010/09/19/code-formatting/</link>
      <pubDate>Sun, 19 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/09/19/code-formatting/</guid>
      <description>&lt;p&gt;One interesting detail about Google’s new programming language &lt;a href=&#34;http://golang.org/&#34; target=&#34;_blank&#34;&gt;Go&lt;/a&gt; is the code formatting tool called gofmt that is bundled right into the Go developer kit. It shows the extent to which the creators of the language care about code formatting. Programmers who are not bothered by poor code formatting will find this tool unnecessary, but most programmers are likely to be bothered by lack of good formatting.&lt;/p&gt;

&lt;p&gt;Most programming languages, especially the popular ones, do have utilities that help format code, but it is rare to see this being part of the developer kit from the creators of the language. This could well be a new trend that we will see in the languages of the future. This will also reduce the overhead of sweating over formatting rules in a programming team’s coding guidelines.&lt;/p&gt;

&lt;p&gt;The only downside of standardizing formatting rules for a language is: it will now be hard to judge a programmer’s maturity by just looking at their code. I know you are saying ‘but thats no way to judge a programmer!’ I agree, but it is also hard to ignore it entirely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Life</title>
      <link>https://karecha.com/blog/2010/09/17/life/</link>
      <pubDate>Fri, 17 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/09/17/life/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://shop.holstee.com/pages/manifesto&#34; target=&#34;_blank&#34;&gt;This is your life&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tumblr widget for Mac</title>
      <link>https://karecha.com/blog/2010/09/10/tumblr-widget-for-mac/</link>
      <pubDate>Fri, 10 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/09/10/tumblr-widget-for-mac/</guid>
      <description>&lt;p&gt;Trying out the tumblr widget on my Macbook.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ideas and humans</title>
      <link>https://karecha.com/blog/2010/09/06/ideas-and-humans/</link>
      <pubDate>Mon, 06 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/09/06/ideas-and-humans/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Many humans have given their lives to preserve ideas, but no idea ever died
to save a human.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Scott Adams talks about ideas in a blog post called &lt;a href=&#34;http://dilbert.com/blog/entry/shape_shifters/&#34; target=&#34;_blank&#34;&gt;Shape Shifters&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Guzzler</title>
      <link>https://karecha.com/blog/2010/09/04/guzzler/</link>
      <pubDate>Sat, 04 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/09/04/guzzler/</guid>
      <description>&lt;p&gt;My Google Reader Trends (Gosh, what a time guzzler!)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;From your 52 subscriptions, over the last 30 days you read 848 items, clicked
103 items, starred 0 items, shared 0 items, and emailed 1 items.&lt;/p&gt;

&lt;p&gt;Since October 10, 2005 you have read a total of 23,550 items.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Meetings</title>
      <link>https://karecha.com/blog/2010/09/04/meetings/</link>
      <pubDate>Sat, 04 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/09/04/meetings/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s also unfortunate that meetings are typically scheduled like TV shows.
You set aside thirty minutes or an hour because that&amp;rsquo;s how scheduling software
works.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; From the book &lt;a href=&#34;http://37signals.com/svn/posts/1864-rework-unveiling-the-cover&#34; target=&#34;_blank&#34;&gt;REWORK&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Agile</title>
      <link>https://karecha.com/blog/2010/09/01/agile/</link>
      <pubDate>Wed, 01 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/09/01/agile/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s an extreme &lt;a href=&#34;http://37signals.com/svn/posts/2550
-smiley-an-app-in-24-hours&#34; target=&#34;_blank&#34;&gt;example of being Agile&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Argument against functional spec</title>
      <link>https://karecha.com/blog/2010/08/30/argument-against-functional-spec/</link>
      <pubDate>Mon, 30 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/30/argument-against-functional-spec/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;A feature is signed off and agreed on. Even if you realize during development
that it&amp;rsquo;s a bad idea, you&amp;rsquo;re stuck with it. Specs don&amp;rsquo;t deal with the reality
that once you start building something, everything changes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From &lt;a href=&#34;http://gettingreal.37signals.com/ch11_Theres_Nothing_Funct
ional_about_a_Functional_Spec.php&#34; target=&#34;_blank&#34;&gt;Getting Real&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Product personality</title>
      <link>https://karecha.com/blog/2010/08/30/product-personality/</link>
      <pubDate>Mon, 30 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/30/product-personality/</guid>
      <description>&lt;p&gt;Your product has a voice — and it&amp;rsquo;s talking to your customers 24 hours a day.&lt;/p&gt;

&lt;p&gt;From &lt;a href=&#34;http://gettingreal.37signals.com/ch11_Personify_Your_Product.php&#34; target=&#34;_blank&#34;&gt;Getting
Real&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>It depends</title>
      <link>https://karecha.com/blog/2010/08/28/it-depends/</link>
      <pubDate>Sat, 28 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/28/it-depends/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;We&amp;rsquo;d rather be provocative than water everything down with &amp;ldquo;it depends…&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://gettingreal.37signals.com/ch01_Caveats_disclaimers_and_other_preemptive_strikes.php&#34; target=&#34;_blank&#34;&gt;In a book from 37signals&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time and budget</title>
      <link>https://karecha.com/blog/2010/08/28/time-and-budget/</link>
      <pubDate>Sat, 28 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/28/time-and-budget/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;If you can&amp;rsquo;t fit everything in within the time and budget allotted then don&amp;rsquo;t
expand the time and budget. Instead, pull back the scope. There&amp;rsquo;s always time
to add stuff later — later is eternal, now is fleeting.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://gettingreal.37signals.com/ch02_Fix_Time_and_Budget_Flex_Scope.php&#34; target=&#34;_blank&#34;&gt;Fix Time and Budget, Flex Scope&lt;/a&gt; by 37signals&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Documentation</title>
      <link>https://karecha.com/blog/2010/08/27/documentation/</link>
      <pubDate>Fri, 27 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/27/documentation/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;I can&amp;rsquo;t complain about the documentation here - it says exactly what it will
do. It&amp;rsquo;s just not obvious that you need to worry about it, until you run into
such a problem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://msmvps.com/blogs/jon_skeet/archive/2010/07/29/there-s-a-hole-in-my-abstraction-dear-liza-dear-liza.aspx&#34; target=&#34;_blank&#34;&gt;Post&lt;/a&gt; by Jon Skeet on a flaw in Java Collections API&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coffee</title>
      <link>https://karecha.com/blog/2010/08/24/coffee/</link>
      <pubDate>Tue, 24 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/24/coffee/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Some of us need regular amounts of coffee or other chemical enhancers to make
us cognitively sharper. A newly published study suggests perhaps a brief bit
of meditation would prepare us just as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.sciencedaily.com/releases/2010/04/100414184220.htm&#34; target=&#34;_blank&#34;&gt;Article&lt;/a&gt; in &lt;a href=&#34;http://www.sciencedaily.com/&#34; target=&#34;_blank&#34;&gt;Science Daily&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Software development</title>
      <link>https://karecha.com/blog/2010/08/24/software-development/</link>
      <pubDate>Tue, 24 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/24/software-development/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://tapankarecha.wordpress.com/2010/08/22/career-in-software-
development-build-the-foundation/&#34; target=&#34;_blank&#34;&gt;Begining a career in software
development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sage advice for beginers in the field of software development.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Walls</title>
      <link>https://karecha.com/blog/2010/08/24/walls/</link>
      <pubDate>Tue, 24 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/24/walls/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The consequence of not putting any walls around your product is that both the
good guys and the bad guys can do anything they want with it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.zdnet.com/blog/btl/the-dirty-little-secret-about-google-android/38260&#34; target=&#34;_blank&#34;&gt;The Dirty Little Secret about Google Android&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Career in software development: Building a foundation</title>
      <link>https://karecha.com/blog/2010/08/22/career-in-software-development-building-a-foundation/</link>
      <pubDate>Sun, 22 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/22/career-in-software-development-building-a-foundation/</guid>
      <description>&lt;p&gt;One frequently asked question from programmers at the starting point of thier career as software developers is: I have a college degree and am ready to find a job or have just landed my first job. What are the skills I need in order to be succesfull on the job and in order to advance my career in this field? Here’s a list that is an attempt to answer this question.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Programming languages&lt;/strong&gt;: This is the basic tool in your toolkit that you will use in any role in a software development team. I recommend picking up proficiency in at least three languages:

&lt;ul&gt;
&lt;li&gt;The primary language that you will use every day at your job, e.g. Java&lt;/li&gt;
&lt;li&gt;One additional language that will help you challenge your thinking outside of the primary programming language you use, e.g. C, Go, Smalltalk, etc. This will prevent you from getting in a frog-in-the-well situation where you know only one programming language and hence your thinking is constrained by the heuristics of that one language.&lt;/li&gt;
&lt;li&gt;A scripting language which allows you to perform quick tasks with extreme ease, e.g. Perl. This is necessary to create tools for your development or testing environment which will dramatically improve your efficiency in getting things done.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Source code control, a.k.a version or revision control&lt;/strong&gt;. Though this belongs to the “software development tools” category, it is important enough to be dealt with separately. Be very comfortable working with two software version control products, and my recommendation is: Git (a distributed version control software that is gaining popularity at an amazing pace), and Subversion (a.k.a. svn, which is probably the most widely used revision control software by the open source community and at many software development companies). These two offer very different set of capabilities and hence knowing both will help you gain a good understanding of the basic concepts of version control and also expose you to unique challenges in maintaining revision history and how these two products address those challenges.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Software development tools&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Operating systems: Again, being comfortable with at least two OSes is ideal, and the two should be Linux and Windows Server. You should be comfortable performing basic administrative tasks on both, and should be able to use debugging or troubleshooting tools on these platforms in order to troubleshoot issues with a program written in your language of choice.&lt;/li&gt;
&lt;li&gt;IDE: Pick an IDE and learn it inside out. For e.g. Eclipse.&lt;/li&gt;
&lt;li&gt;Text editor: Learn to use a good text editor (notepad is not enough) that will dramatically improve your efficiency of writing and manipulating large amounts of text. There are really only a few options here. vim and emacs are the two big options, and you will need to pick one now. I have chosen vim and I use gvim on Windows and Linux (&lt;a href=&#34;http://www.vim.org&#34; target=&#34;_blank&#34;&gt;http://www.vim.org&lt;/a&gt;) and it allows me to do magic with text.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Software development methodology.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This one is something you will learn at any job but what you learn will most likely be a cheap knockoff of one of the popular methodologies. You should acquire theoretical knowledge in this area and also follow relevant blogs to keep tab on how great teams handle the process issue. This topic sounds more managerial than it should but getting this right or wrong will make or break the effectiveness of a software development team. An ineffective team even with great programmers will rarely produce great sustainable results. Read up on XP, Scrum and other Agile software development in general.&lt;/li&gt;
&lt;li&gt;In addition, let me throw in TDD in this section. This actually belongs in section 1 above as it’s more about how you write and maintain code. Anyways, learn TDD (test driven development) and live and breath TDD at your work even if your company does not require you to develop tests as you write code.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Write documentation&lt;/strong&gt;. Practice writing documentation at all levels. Develop a habit of writing clearly in order to get the most out of your programming skills. Good programmers who are constrained by poor documentation skills find it difficult to put their software to good use due to their inability to articulate the capabilities of the software they create. You will need to write and explain at places like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;comments in code&lt;/li&gt;
&lt;li&gt;requirements document&lt;/li&gt;
&lt;li&gt;system test specifications&lt;/li&gt;
&lt;li&gt;user manuals&lt;/li&gt;
&lt;li&gt;command references or man pages&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Get involved in open source&lt;/strong&gt;: The best way to learn good software development for a common programmer is to join one or two open source projects. Active participation is the key, just enrolling will not help. Any role in an open source community will put your learning on the fast track. There is so much happening out there and at such a rapid pace, you will probably love contributing to open source software. Being an active contributor to an open source project will improve your chances of being noticed by potential employers and will hone your programming skills in a way that will make your experience at any corporation look pale in comparison (most of the time).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We have not yet touched upon areas like domain knowledge and business acumen but the above is a good starting point for a programmer just starting out on his career.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Competence</title>
      <link>https://karecha.com/blog/2010/08/19/competence/</link>
      <pubDate>Thu, 19 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/19/competence/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The miscalibration of the incompetent stems from an error about the self,
whereas the miscalibration of the highly competent stems from an error about
others.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; That explains the cause of &lt;a href=&#34;http://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect&#34; target=&#34;_blank&#34;&gt;Dunning-Kruger effect&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GVim</title>
      <link>https://karecha.com/blog/2010/08/18/gvim/</link>
      <pubDate>Wed, 18 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/18/gvim/</guid>
      <description>&lt;p&gt;gvim 7.3 released!!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>iPod</title>
      <link>https://karecha.com/blog/2010/08/18/ipod/</link>
      <pubDate>Wed, 18 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/18/ipod/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.time.com/time/health/article/0,8599,2011503,00.html&#34; target=&#34;_blank&#34;&gt;Can you hear me?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blaming iPod again.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Career</title>
      <link>https://karecha.com/blog/2010/08/17/career/</link>
      <pubDate>Tue, 17 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/17/career/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This is an industry that moves at a high velocity created by those who care
to pay attention.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Michael Lopp on &lt;a href=&#34;http://answers.oreilly.com/topic/1917-3-easy-ways-to-destroy-your-career/&#34; target=&#34;_blank&#34;&gt;how to destroy your career&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Network diagram</title>
      <link>https://karecha.com/blog/2010/08/17/network-diagram/</link>
      <pubDate>Tue, 17 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/17/network-diagram/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.cablemap.info/&#34; target=&#34;_blank&#34;&gt;Network diagram of the world &amp;ndash; sort of&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tumblr issues</title>
      <link>https://karecha.com/blog/2010/08/17/tumblr-issues/</link>
      <pubDate>Tue, 17 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/17/tumblr-issues/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.tumblr.com&#34; target=&#34;_blank&#34;&gt;Tumblr&lt;/a&gt; is acting up. Looks like the site is
undergoing maintenance which is making it flaky. This should pass…&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Red flag</title>
      <link>https://karecha.com/blog/2010/08/13/red-flag/</link>
      <pubDate>Fri, 13 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/13/red-flag/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Be wary of any idea that requires a long explanation. That&amp;rsquo;s a red flag. And
be twice as wary of anything that can be explained in four words or less.
That&amp;rsquo;s a red flag too.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Scott Adams in &lt;a href=&#34;http://dilbert.com/blog/entry/big_round_numbers/&#34; target=&#34;_blank&#34;&gt;a blog post&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vocabulary</title>
      <link>https://karecha.com/blog/2010/08/13/vocabulary/</link>
      <pubDate>Fri, 13 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/13/vocabulary/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;I have a theory that the rational side of your brain is only as strong as
your language skills. You assume that a person who is logical can, as a result
of that logical facility, write a clear and persuasive sentence. But I think
causation works the other way. I think language creates logic. The stronger
your language skills are, the better your logic becomes. You can never be more
rational than your vocabulary allows.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ndash; Scott Adams in &lt;a href=&#34;http://dilbert.com/blog/entry/big_round_numbers/&#34; target=&#34;_blank&#34;&gt;a blog post&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hurd&#39;s exit</title>
      <link>https://karecha.com/blog/2010/08/08/hurds-exit/</link>
      <pubDate>Sun, 08 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/08/hurds-exit/</guid>
      <description>&lt;p&gt;There may be more than meets the eye in &lt;a href=&#34;http://online.wsj.com/ar
ticle/SB10001424052748704182304575415990715123362.html&#34; target=&#34;_blank&#34;&gt;Hurd&amp;rsquo;s exit&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Journals and notebooks</title>
      <link>https://karecha.com/blog/2010/08/08/journals-and-notebooks/</link>
      <pubDate>Sun, 08 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/08/08/journals-and-notebooks/</guid>
      <description>&lt;p&gt;Lately, I&amp;rsquo;ve been taking notes like never before … and hold your breath … in
physical note books! I can see some of the benefits already, and these are
nothing new. One is (the good old cliche): never forget anything. Another: by
writing down somehting, I see its easier to remember that thing even without
having to look it up. Looks like the pause that is necessary to note something
down in a physical notebook is also sufficient to write that down in the
brain&amp;rsquo;s memory. No wonder so many notebooks and journals are popular in this
digital age. BTW, I dont think taking notes on a computer has the same
benefits as taking notes on a physical book. Though you can record much more
on a computer, and retrieve or search that information much faster on a
computer, its not as romantic as doing the same in a notebook. I think the
benefits are clear in both cases. If you are taking notes for work, go for the
computer if thats what you spent more time on, and if you are taking notes for
yourself, like getting your life organized, planning for the future, recording
your experiences etc like in a diary, then use the physical notebook.&lt;/p&gt;

&lt;p&gt;With the digital age gaining steam, and the physical book publishers starting
to go all digital, the day is not far when very few printed books will be
available. However, the demand for physical journals and notebooks will
continue for a long time to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slacker</title>
      <link>https://karecha.com/blog/2010/07/11/slacker/</link>
      <pubDate>Sun, 11 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/07/11/slacker/</guid>
      <description>&lt;p&gt;Thursday, Friday, Saturday and Sunday, I have not worked out. Let me admit,
I&amp;rsquo;ve been slacking. This attitude needs to change, and change it will.&lt;/p&gt;

&lt;p&gt;Keep watching.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Aching bones</title>
      <link>https://karecha.com/blog/2010/07/07/aching-bones/</link>
      <pubDate>Wed, 07 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/07/07/aching-bones/</guid>
      <description>&lt;p&gt;Last evening, I was scheduled to run for 30 minutes. I hit the gym to do my
bit, and started off on the treadmill, with the timer set to 30 minutes. Due
to popularity of the treadmills and at the same time, lack of a good number
(there are only 3 at the gym), the use of this machine is restricted to 20
mintunes at a time. I did not want to raise eyebrows by violating that rule,
and therefore, I got off the machine at 20 minutes and started running out of
the gym and hit the road. Finished the remaining 10 minutes on the road
(around the block in the neighborhood) and this was like a test for the days
to come. I felt good running on the road after a long time. And, as noted by
Tim in &lt;em&gt;Lore of Running&lt;/em&gt;, I had not forgotten running. My body took it very
well.&lt;/p&gt;

&lt;p&gt;Starting today, I have switched to the morning routine as planned, and today
walked 45 minutes in the neighborhood. Now, during the day, I can feel a bit
of soreness all over my body and it feels good.&lt;/p&gt;

&lt;p&gt;I have also thrown in some stretching at the end of my run, and that seems to
help. Overall, this first week of daily activity is going to take its toll but
I am happy this is the begining of a journey that I hope to be very enjoyable
very soon.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Started on new plan</title>
      <link>https://karecha.com/blog/2010/07/06/started-on-new-plan/</link>
      <pubDate>Tue, 06 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/07/06/started-on-new-plan/</guid>
      <description>&lt;p&gt;Yesterday evening, I started on the new plan. It was a walk day, and I went
out for a 45 mintute walk. I have to admit, the experience was not that great.
Pollution was severe, even with low traffic due to all India bandh, and I can
only image how bad the pollution will be on a normal work day.&lt;/p&gt;

&lt;p&gt;I have two options: 1. stick to indoor activities in the gym, or 2. pick a
time and route with least pollution. For now, I am going to pick 2. Though its
well known that mornings are the least favorable time for workouts, because of
the body&amp;rsquo;s lack of readiness for activity, I am going to have to pick that
time for my daily walks and runs. And the route… I am going to make circles
around the big block in my neighbourhood and avoid taking yesterday&amp;rsquo;s route
near the main road. Having to do multiple circles around he block is going to
be a bit monotonous but I prefer that over breathing in smoke and dust.&lt;/p&gt;

&lt;p&gt;Overall the 45 minute walk was energizing (in spite of the above) and am
looking forward to my run today evening in the gym and then starting tomorrow,
the mornings will be the time for my runs and walks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lore of running</title>
      <link>https://karecha.com/blog/2010/06/05/lore-of-running/</link>
      <pubDate>Sat, 05 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/06/05/lore-of-running/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Lore-Running-4th-Timothy-
Noakes/dp/0873229592&#34; target=&#34;_blank&#34;&gt;Tim Noakes&amp;rsquo; Lore of Running&lt;/a&gt; is turning out to be a very good read. Tim&amp;rsquo;s narrative
is convincing and it would be a waste to not follow his advice on running, at
least as a beginner. After running on and off during the last decade, I am now
ready to take running seriously.&lt;/p&gt;

&lt;p&gt;First off, I now have a plan in place. So far, I have chalked out some
outlines of the plan. For starters, its going to be a one year plan. This is a
good enough horizon that is not too far off in the future and at the same
time, provides enough time to produce tangible results. So, in the next one
year, I will be working out for 10 solid months and then take a 2 month break,
which Tim says is essential for a serious runner who wants to continue to run
for many years and decades.&lt;/p&gt;

&lt;p&gt;Breaking that down further, I also have a plan for this month. Its a run a day
/ walk a day, covering 6 days a week. This is designed to just form a habit of
getting out of the door and working out for half an hour or more. Its simple:
run 30 minutes a day and walk 45 minutes the next day. Repeat from Monday
through Saturday, and rest on Sunday.&lt;/p&gt;

&lt;p&gt;This phase (I call it Phase 1) will last for 2 months, and the regimen for
month 2 (i.e. August) will probably vary only a little from what I have
planned for this month. The idea is to just incorporate my learning from this
month into the next, without altering the goal of this phase, which is, get
into a habit of exercising. Though I have not set foot on the road with this
new plan, I am already feeling positive and the chances of success seem to be
high because this plan is not overly ambitious or unrealistic.&lt;/p&gt;

&lt;p&gt;And while I plan and implement this one year fitness plan, I expect to get
better at planning itself. Thats two birds with one stone.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The aftermath</title>
      <link>https://karecha.com/blog/2010/01/21/the-aftermath/</link>
      <pubDate>Thu, 21 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2010/01/21/the-aftermath/</guid>
      <description>&lt;p&gt;Ian Taylor notes in his &lt;a href=&#34;http://www.airs.com/blog/archives/294&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt; about the rise of &lt;a href=&#34;http://en.wikipedia.org/wiki/Cargo_cult_programming&#34; target=&#34;_blank&#34;&gt;Cargo Cult Programming&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;In today’s increasingly complex world of programming, when so much code involves integrating libraries in various ways, I expect that cargo cult programming is on the rise.&lt;/p&gt;

&lt;p&gt;He is talking in context of developing open source software, but this applies to proprietary software development as well. In a commercial software development enterprise, cargo cult is less likely to be noticed or pointed out because peer review is no longer deemed necessary as there is so much to do with so few people to go around. Its easier to just turn a blind eye.&lt;/p&gt;

&lt;p&gt;One of the many possible reasons, at least in corporations, can be the increasing pressure to deliver by an arbitrary deadline set by someone who does not really understand the work involved. In such situations, developers confront a couple of options when faced with a seemingly impossible goal:&lt;/p&gt;

&lt;p&gt;Reason with the management to help them see why a deadline will be missed; or
Go ahead and put together software that will be accepted by customer, with little concern for the day after; or
Create a culture and a team that can deliver good software which meets aggressive schedule. Every team strives (even if pretends) to reach here.
Afraid of trying (or after trying) option 1, developers take the easy route with option 2. They cut corners, copy/paste code, and do anything that needs to be done — in order to meet a deadline. And then they deliver. Everybody is happy, and life goes on. The feature is accepted and deployed.&lt;/p&gt;

&lt;p&gt;The aftermath will be dealt with by technical support. What are they paid for, after all?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My little world</title>
      <link>https://karecha.com/blog/2009/04/11/my-little-world/</link>
      <pubDate>Sat, 11 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2009/04/11/my-little-world/</guid>
      <description>&lt;p&gt;I love living in my own little world, which is made up of my little computer (Acer Aspire One) and allows me to go find refuge in a different world for whatever time I can spare every day. Its not just about the form factor of this little machine — which is impressive, by the way — but its more of what’s on this machine.&lt;/p&gt;

&lt;p&gt;If you are not familiar with this little laptop, which is categorized as a netbook in general computer parlance, it is a 8.9″ screen portable computer that runs on Intel’s Atom (dual core) processor and has 1G RAM, 160G HDD and all the fixtures you may expect in a laptop sans CD ROM drive. On this little marvel, I run my favourite applications like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Firefox (My favorite browser)&lt;/li&gt;
&lt;li&gt;gVim (My favorite text editor)&lt;/li&gt;
&lt;li&gt;TweetDeck (My favourite twitter client)&lt;/li&gt;
&lt;li&gt;BlogDesk (My favorite blogging software)&lt;/li&gt;
&lt;li&gt;Thunderbird (My favorite email client)&lt;/li&gt;
&lt;li&gt;Adobe Reader (This is all you need to read most ebooks)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Everytime I have some time, all I need is my wifi to be switched on, and I am happy to just watch time pass by while I read/surf/blog/tweet/watch things that I like.&lt;/p&gt;

&lt;p&gt;All I can say is I am happy to be living in this day and age of the internet. Life would be very different if we did not have all of the above, to take me to the world of my own, where I live happily as long as I need to.&lt;/p&gt;

&lt;p&gt;And when I still have time, I love going out for a run. There are days when I am able to do both, and thats when it feels like nothing can go wrong. Not often, but there are days like that. Today was one of those days.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LTE – Start imagining the consequences of 100 MBps</title>
      <link>https://karecha.com/blog/2009/02/16/lte--start-imagining-the-consequences-of-100-mbps/</link>
      <pubDate>Mon, 16 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2009/02/16/lte--start-imagining-the-consequences-of-100-mbps/</guid>
      <description>&lt;p&gt;LTE (&lt;a href=&#34;http://en.wikipedia.org/wiki/3GPP_Long_Term_Evolution&#34; target=&#34;_blank&#34;&gt;Long Term Evolution&lt;/a&gt;), the most popular pet project from 3GPP promises to deliver data speeds upto 100 MBps. And this is in not-so-distant future even by the standards of internet time. They say the first commercial deployments should go live in 2010 and LTE will be mainstream by 2012.&lt;/p&gt;

&lt;p&gt;Now, let me start imagining the consequences of having such data speeds available on a wireless medium, when the norm now (in early 2009) is data speeds in the range of a few Kbps on most networks in most places. This is sometimes true even for 3G networks and you can read about one such &lt;a href=&#34;http://www.pcworld.com/businesscenter/article/158686/3g_networks_not_as_fast_as_youd_expect.html&#34; target=&#34;_blank&#34;&gt;story inspired by disappointment 3G speeds&lt;/a&gt; here.&lt;/p&gt;

&lt;p&gt;Even the &lt;a href=&#34;http://www.telecoms.com/itmgcontent/tcoms/news/articles/20017618641.html&#34; target=&#34;_blank&#34;&gt;early commercial deployments of LTE&lt;/a&gt; in 2010 are expected to deliver bandwidths of 8 MBps. Eventually, they will reach speeds upto 100 MBps if the designers of LTE did mean that when they wrote the specs. Whats more, this thing is expected to work, albeit with some reduction in performance, for mobile terminal devices moving at speeds of upto 500 Kmph! That’s faster than you can go on Auto Bahns of Germany where they forgot to put a speed limit. Any faster than that, say Schumacher in his racing car, will probably not want to video chat with his friend about how well he is donig in the race, both because he would put his life at risk and also because the poor dude does not race any more since he was asked to retire so other race drivers could wi. Ok, back to our LTE topic…&lt;/p&gt;

&lt;p&gt;Here are things that I think will change when LTE will arive with its full force:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Handsets will have to evolve to support applications that can benefit from high bandwidth, which means, streaming video will be pretty much the norm in any handset (yes, I know its this way even now, but later it will be impossible to find a handset that will not support video).&lt;/li&gt;
&lt;li&gt;Services that provide bandwidth intensive content will flourish and TV show production houses will give equal weightage to mobile consumers.&lt;/li&gt;
&lt;li&gt;Wired broadband providers will eventually become extinct because laying a physical cable all the way to your doorstep will be prohibitively costly in comparision to wireless.&lt;/li&gt;
&lt;li&gt;There will be an exodus of people from cities to rural areas because it will no longer be required for people to live in cities just to find employment and yet be connected to the world in every possible way.&lt;/li&gt;
&lt;li&gt;Voice communication will actually become free of charge, once and for all, no matter what device you use.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are imagining in what other ways things will change, share your thoughts in the comments below. Until then, happy browsing on your slow internet connection!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Forming a habit in 21 days</title>
      <link>https://karecha.com/blog/2009/02/14/forming-a-habit-in-21-days/</link>
      <pubDate>Sat, 14 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2009/02/14/forming-a-habit-in-21-days/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve read references to the researched fact that it takes 21 days to form a new habit. This also applies to breaking an old habit and it can be argued that breaking an old habit is — depending on how you look at it — the same as forming a new habit. Nevertheless, I thought of trying this out and decided to form a habit of running in 21 days.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been running on and off for the last 6 years, and am much better off because of it. But it could have been even better, only if my running program could have been sustained over these years. Every time I reach a point where I am starting to be satisfied with how well I have been running lately, the inevitable happens. I start taking more off days than I should. &amp;lsquo;A day off will do no harm&amp;rsquo;, I would tell myself and happily take a few days off. Soon, the realization dawns that I am no longer following the routine and going for a run becomes as difficult as it was when I first started. In short, I find myself always fighting my first battle, and while it does keep me in better shape than not doing anything at all – c&amp;rsquo;mon, I want to see progress.&lt;/p&gt;

&lt;p&gt;Back to my experiment. Here are some observations.&lt;/p&gt;

&lt;h1 id=&#34;pros&#34;&gt;Pros:&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Gave me a reason to follow a routine for 3 weeks. There were no excuses because I was committed to not miss a single day&amp;rsquo;s run.&lt;/li&gt;
&lt;li&gt;I tweeted about my daily run to let people know about my plan and that helped me take my program seriously.&lt;/li&gt;
&lt;li&gt;I wanted to succeed in my plan because I was almost convinced that there will be no effort after 21 days in sticking to this newly formed habit.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;cons&#34;&gt;Cons:&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;The last point in the &amp;lsquo;pros&amp;rsquo; above is a con too. Let me explain&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During this experiment, I had a mindset that all I needed to do was to stick to my running schedule for 21 days and life will be easy thereafter. I will form the habit, and every morning I will find myself getting up right as the first alarm goes off (without snoozing for many times) and then I will watch my body get up, get ready, get out of the door and start running. I will relax while my body finishes the morning run and I shall just trepeat the routine every day.&lt;/p&gt;

&lt;p&gt;Turns out, its not that easy. It does help to put together a plan to help you get started, but even after the initial momentum has been overcome, maintaining a routine does take effort — if not as much, some nonetheless.&lt;/p&gt;

&lt;p&gt;After my 21 day program, I am again making excuses to myself. But that&amp;rsquo;s set to change now. A new source of inspiration has arrived in town: &lt;a href=&#34;http://search.twitter.com/search?q=%23running&#34; target=&#34;_blank&#34;&gt;twitter hashtag #running&lt;/a&gt;. Every time I read a tweet from somebody who just finished a run, it reminds me of my own runs and makes me feel like running.&lt;/p&gt;

&lt;p&gt;BTW, I am going for a long run tomorrow morning. Happy days are here again!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Told you so</title>
      <link>https://karecha.com/blog/2009/01/07/told-you-so/</link>
      <pubDate>Wed, 07 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2009/01/07/told-you-so/</guid>
      <description>&lt;p&gt;Yesterday I talked about the &lt;a href=&#34;https://karecha.com/blog/2009/01/06/publishing/&#34;&gt;future of publishing&lt;/a&gt; and said plagiarism will be detected early and often due to the possibility of searching the internet, including searching in eBooks. Today, New York  Times ran &lt;a href=&#34;http://www.nytimes.com/2009/01/09/books/07book.html&#34; target=&#34;_blank&#34;&gt;an article&lt;/a&gt; which talks about just one such incident where plagiarism has been detected and the guilty has admitted having done that. Though the article does not refer to a &amp;lsquo;book search&amp;rsquo; that made it possible, I am guessing that is the case. And note that the culprit does not contest the original author&amp;rsquo;s accusation. There is no way people will not know plagiarism, just because anybody can verify that claim with a simple book search.&lt;/p&gt;

&lt;p&gt;See? I told you so.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Future of publishing</title>
      <link>https://karecha.com/blog/2009/01/06/future-of-publishing/</link>
      <pubDate>Tue, 06 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2009/01/06/future-of-publishing/</guid>
      <description>&lt;p&gt;Books used to be precious commodities when there were only printed copies of them. Even the authors had only one or two carbon copies of the original manuscript which they painstakingly created by typing on paper sheets with carbon papers sandwiched in between those pages. I guess the criteria to determine the number of carbon copies would have been authors’ age and the strength of his fingers because the harder he can type, the more copies he can create.&lt;/p&gt;

&lt;p&gt;But things have changed now, since there are eBooks available for most printed books. The manuscript itself is electronic but that was not the case always. It started with enthusiasts keying in entire books onto their computers and publishing them on &lt;a href=&#34;http://www.gutenberg.org/&#34; target=&#34;_blank&#34;&gt;Project Gutenberg&lt;/a&gt;. Now the likes of &lt;a href=&#34;http://books.google.com/&#34; target=&#34;_blank&#34;&gt;books.google.com&lt;/a&gt; scan the books and the software reads the text from the scanned copies. This makes it possible to make the contents of the book searchable.&lt;/p&gt;

&lt;p&gt;Well, we all know that but this introduction was necessary to make my point which I shall proceed to do now…&lt;/p&gt;

&lt;p&gt;The way authors present their material has changed based on the technology used to create, distribute and reproduce their work. This is especially true for non-fiction books where it is sometimes helpful or even necessary to provide illustrations, annotations and supplementary information in order to make a point. I have observed the following trends as technology has evolved:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Early printing press: Most content was text with some rudimentary illustrations&lt;/li&gt;
&lt;li&gt;Laser printer (circa 1969 as per Wikipedia): Emphasis on quality of paper and colorful images&lt;/li&gt;
&lt;li&gt;Digital press (1990s): Digitization of books begins and the focus shifts to text again&lt;/li&gt;
&lt;li&gt;Book search (21st Century): It’s possible to search into a growing number of books now hosted on books.google.com&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The now possible search is going to radically change the way authors will organize and present their material. Readers are now able to directly seek the section in the book that satisfies their need or curiosity, and with this new behavior, the days of long drawn text are numbered. Authors will now keep their work concise and search friendly. They will use different words that mean the same thing and in doing so, maximize the possibility of their text getting included in a variety of search results. The use of illustrations and images will also decline; at least until image search matures to a point that it becomes useful. Attributions will rise steeply; maybe it already has, because it is easier to detect plagiarism. And, fewer people will read books cover to cover.&lt;/p&gt;

&lt;p&gt;Finally, a growing number of authors will chose to &lt;em&gt;not&lt;/em&gt; print a book, but just publish a soft copy. As an added advantage, the world will be a wee bit greener.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Audio books</title>
      <link>https://karecha.com/blog/2008/12/27/audio-books/</link>
      <pubDate>Sat, 27 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2008/12/27/audio-books/</guid>
      <description>&lt;p&gt;The pleasure of reading — nothing can beat that. The comparison is with the alternative, i.e. listening, which is gaining popularity. I have been listening to podcasts for a while now and I do enjoy the experience. However, when it comes to listing to audio books, thats quite a different thing. After trying to listen to an audio book, I gave up after the first two chapters, and after that trial I did not try doing that again. Here are some of the reasons why I find the idea of listening to audio books obnoxious:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Its much easier to say &amp;ldquo;yeah, I&amp;rsquo;ve read that book&amp;rdquo; than &amp;ldquo;yeah, I have listened to that book&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Until I change my mind, I think books are supposed to be read, not listened to, unless you are a toddler and are yet to learn how to read&lt;/li&gt;
&lt;li&gt;When I reach a point in the book where the author just finished making a point, I like to pause and chew on it. That&amp;rsquo;s the pleasure of reading and is impossible to experience when you are listening to an audio book.&lt;/li&gt;
&lt;li&gt;A well written book has annotations, footnotes, images, sketches interwoven into the narrative, which cannot be captured in the audio book.&lt;/li&gt;
&lt;li&gt;The all important &amp;ldquo;Appendix&amp;rdquo; gives you pointers to the articles, books and other sources that the author got her references from, and you will just skip that part in the audio book. Do audio books even have an Appendix?&lt;/li&gt;
&lt;li&gt;You can change your pace as you read based on how heavy the material is, which cannot be controlled in an audio book. The audio just goes at one pace which the reader chose to pick and you are stuck with that pace, while you can read at your own pace.&lt;/li&gt;
&lt;li&gt;You can highlight or mark the text in a book and reference it later. You can even add your own notes in the book and that enhances the value of the book.&lt;/li&gt;
&lt;li&gt;When I am reading a book, I am engaged in an activity which my brain associates with something creative. But when I am listening to the audio, I am actually doing nothing. My eyes see something which is not a book and creates distractions. Also, my hands are free to start fiddling with whatever is accessible and thats another distraction. Soon, I reach a point where I am not paying any attention to the audio which is streaming through the ear phones and there ends my curiosity about the book.&lt;/li&gt;
&lt;li&gt;Last but not the least, I tend to fall asleep when listening to the audio book.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Probably, this is the reason why my friend did not enjoy &lt;a href=&#34;http://twitter.com/Gladwell&#34; target=&#34;_blank&#34;&gt;Malcom Gladwell&amp;rsquo;s&lt;/a&gt; new book — &lt;a href=&#34;http://www.amazon.com/Outliers-Story-Success-Malcolm-Gladwell/dp/0316017922/&#34; target=&#34;_blank&#34;&gt;Outliers&lt;/a&gt;, but I liked it a lot. He listened to the audio book, while I read it. I had enough time to pause and think about things while he had to keep up with the audio, which would have prevented him from taking the time to soak in the good words author had to offer in the book.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gotta blog</title>
      <link>https://karecha.com/blog/2008/12/14/gotta-blog/</link>
      <pubDate>Sun, 14 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>https://karecha.com/blog/2008/12/14/gotta-blog/</guid>
      <description>&lt;p&gt;Ok, I am set for blogging and I am doing this for — I don&amp;rsquo;t know how many times — now. Since I keep coming back to the idea of starting a blog, this is my one more effort. Lets see how this goes. For now, all I say is: I shall  blog. Thats it for today. Wait for more messages in the near future.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
