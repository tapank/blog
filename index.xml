<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes to self</title>
    <link>https://karecha.com/</link>
    <description>Recent content on Notes to self</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>tapan@karecha.com (Tapan Karecha)</managingEditor>
    <webMaster>tapan@karecha.com (Tapan Karecha)</webMaster>
    <lastBuildDate>Thu, 09 May 2024 11:16:15 +0530</lastBuildDate><atom:link href="https://karecha.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Believing Is Seeing</title>
      <link>https://karecha.com/blog/2024/05/09/believing-is-seeing/</link>
      <pubDate>Thu, 09 May 2024 11:16:15 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2024/05/09/believing-is-seeing/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Untutored minds are very prone to mistake inferences for observations, and
prepossessions for facts; their observations and their judgments are alike
vitiated by dogma and prejudice; they do not seek to investigate, they seek to
prove.  The old proverb is inverted, believing is seeing. The student of
science must pledge himself to do his best to eliminate prepossession and dogma
from his judgments, and he must spare no pains to acquire the habit of
recording phenomena as they are observed; and to distinguish sharply between
what is or has been actually seen, and what is mentally supplied. It requires a
mind disciplined like a soldier to avoid the natural inclination to look away
from unwelcome facts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; Frederick Ludwig Hoffman&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advice From Kipchoge</title>
      <link>https://karecha.com/blog/2024/03/17/advice-from-kipchoge/</link>
      <pubDate>Sun, 17 Mar 2024 12:00:33 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2024/03/17/advice-from-kipchoge/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Eliud_Kipchoge&#34;&gt;Eliud Kipchoge&lt;/a&gt;, one of the running greats, shared the following advice with
runners and others, on a podcast. Below, I present some of that guidance,
rephrased in my own language.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you achieve something, celebrate. But soon start focusing on the next goal.&lt;/li&gt;
&lt;li&gt;Instead of focusing on success, focus on training and planning which can
bring success.&lt;/li&gt;
&lt;li&gt;Do not sit and wait for success.&lt;/li&gt;
&lt;li&gt;Success is proof of your mastery over what you are doing. But you need a
system.&lt;/li&gt;
&lt;li&gt;Define success in your own view.&lt;/li&gt;
&lt;li&gt;Running is life.&lt;/li&gt;
&lt;li&gt;Life is about movement.&lt;/li&gt;
&lt;li&gt;Reflect daily on whether you influenced the world positively or
negatively.&lt;/li&gt;
&lt;li&gt;Pain is part of success. Learn to enjoy pain.&lt;/li&gt;
&lt;li&gt;Run daily, and do resistance training 3 days a week.&lt;/li&gt;
&lt;li&gt;A lot of endurance training keeps injuries at bay.&lt;/li&gt;
&lt;li&gt;Self discipline means sacrificing passions and pleasures in order to work
on your career.&lt;/li&gt;
&lt;li&gt;No human is limited.&lt;/li&gt;
&lt;li&gt;Believe it first before you can do it.&lt;/li&gt;
&lt;li&gt;Success is a process. It&amp;rsquo;s mantra is:
&lt;ol&gt;
&lt;li&gt;Say no a lot.&lt;/li&gt;
&lt;li&gt;Set your priorities right.&lt;/li&gt;
&lt;li&gt;Avoid complaining.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Reaching Long Term Goals</title>
      <link>https://karecha.com/blog/2024/03/13/reaching-long-term-goals/</link>
      <pubDate>Wed, 13 Mar 2024 11:14:05 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2024/03/13/reaching-long-term-goals/</guid>
      <description>&lt;p&gt;Reaching a goal or successfully executing a plan — one thing they have in
common is that they need us to make progress.  Our rate of success in
reaching the short term goals is a good indicator of whether we will
succeed at long term goals. This is because the one thing we need to do for
the short term goal — make progress in the present — is also applicable
to longer term goals but with an amplified effect on the outcome.&lt;/p&gt;
&lt;h2 id=&#34;why-we-fail&#34;&gt;Why we fail&lt;/h2&gt;
&lt;p&gt;Alas, we are not very good at making progress &lt;em&gt;now&lt;/em&gt;. We think we could have
made progress in the past. We think we can definitely make progress in the
future. But we fail at making progress here and now. We are optimistic when
setting a goal. In the excitement of thinking about a positive future, we
believe we can do more than our track record would indicate. This is why we
come up with lofty new year goals only to be disappointed by our inability
to follow through with our plans.&lt;/p&gt;
&lt;h2 id=&#34;how-to-succeed&#34;&gt;How to succeed&lt;/h2&gt;
&lt;p&gt;If we are not reaching our short term goals, it is unlikely that we will
reach the long term goals. We should first fix this by improving our
success rate of reaching short term goals. This helps us get quick
feedback and allows us to test out strategies that do and do not work for
us. We can play with the two knobs that we control:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;our ability to finish the planned tasks of the day; and&lt;/li&gt;
&lt;li&gt;setting realistic goals&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;the-daily-tasks&#34;&gt;The daily tasks&lt;/h3&gt;
&lt;p&gt;At the end of the day, when we plan the tasks for the next day, we are
optimistic. We tend to trust our future self to do things that our current
self may be unwilling to take on. Yet, we go ahead and plan the tasks for
tomorrow with the assumption that when the time comes, we will be up for
the tasks. When we see ourselves
constantly fall short on this metric, the first thing to do is improve the
day to day success rate of completed tasks, whatever they may be. This is
how we train ourselves to actually do those things that we said we will do.
This is a muscle that can and must be trained.  Every little success here
creates a positive feedback loop, and it further improves our success rate
of reaching short term goals.&lt;/p&gt;
&lt;h3 id=&#34;be-realistic&#34;&gt;Be realistic&lt;/h3&gt;
&lt;p&gt;While training our ability to complete the daily tasks, we should pay close
attention to how we feel as the days go by. It is possible to power through
our daily tasks for a few days and create a high success rate but if we
feel worse with each passing day, that pace is unsustainable. The pace
improves with time, but the optimal pace is highly individual and hence we
must be careful to not compare ourselves to others.  Once we hit a
sustainable pace, we can use that as an input when we plan for the long
term goals.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;While we are still failing to reach our short term goals, let us not assume
we will magically succeed in our long term goals. We should first train to
get better at reaching our short term goals.  This not only gives us a
realistic assessment of our current abilities, but when done frequently, it
also improves our abilities. This is the path to reaching our long term
goals.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Antidote to Distractions: Surf the Urge</title>
      <link>https://karecha.com/blog/2024/02/19/antidote-to-distractions-surf-the-urge/</link>
      <pubDate>Mon, 19 Feb 2024 14:37:25 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2024/02/19/antidote-to-distractions-surf-the-urge/</guid>
      <description>&lt;p&gt;Recently I came across a nice tip in the book &amp;ldquo;Indistractable: How To
Control Your Attention and Choose Your Life&amp;rdquo; by Nir Eyal.  The author
asserts that the solution to avoiding distractions is not to abstain from
the things that are distracting us but to identify the inner triggers that
lead to distraction and manage them instead. This is really powerful
because now we can no longer pin the blame for &lt;em&gt;our&lt;/em&gt; distractions on
&lt;em&gt;their&lt;/em&gt; products.&lt;/p&gt;
&lt;p&gt;Distraction tricks us into prioritizing the urgent and easy over hard and
long term.  There are two kinds of triggers: external and internal.
According to the author, only 10% of the triggers are external but 90% are
internal!  Most distractions begin inside, and are usually caused by
boredom, fatigue, loneliness, anxiety, stress, etc.  And the root cause of
distractions is our inability to deal with these discomforts.  One tool to
avoid distraction is the 10 minute rule.  When you are on a task and the
urge for distraction strikes, do one of the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Tell yourself that you will scratch the urge but not yet. Get back to
the task for at least 10 minutes. Generally, the urge subsides and you
will be able to continue on your task.&lt;/li&gt;
&lt;li&gt;Surf the urge. Literally sit and observe your urge but do not act on it
for at least 10 minutes. When we observe the urge, we soon learn that it
is like a wave and it subsides soon.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This trick generally works. Definitely worth trying.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dead Tree Dictionary</title>
      <link>https://karecha.com/blog/2023/03/16/dead-tree-dictionary/</link>
      <pubDate>Thu, 16 Mar 2023 12:16:20 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2023/03/16/dead-tree-dictionary/</guid>
      <description>&lt;p&gt;Growing up, with no computers around me, the only way to know the definition
of a new word was either to ask around or use a dictionary.  Things changed
with time and now &amp;mdash; for decades &amp;mdash; the fastest way to look up the meaning
of a word is to check online.  MacOS also provides a handy keyboard shortcut
&amp;mdash; CTRL + CMD + d to look up the word under the mouse pointer.  With time, my
reading habit has shifted away from the screen, to dead tree versions of
books, newspapers and news magazines.  This has reduced my general levels of
stress and anxiety, but I digress. This new shift presents a challenge when I
need to use a dictionary.  For a long time, I would pick up the phone, open
the dictionary app to look up the word.  But when I do that, I would often get
sucked into other things on the phone such as new emails, messages, and the
other app notifications would scream for attention.  By the time I realize
that I sidetracked, I would lose the original context.&lt;/p&gt;
&lt;p&gt;My solution was to dust up the good old dead tree dictionary.  I have this
Merriam-Webster&amp;rsquo;s Collegiate Dictionary (Eleventh Edition) which I had bought
on an impulse, thinking that my children should know what a physical
dictionary looks like and should also learn how to use one.  They have used it
a few times but it sits on the shelf mostly unused.  Not any more.  Now I keep
this dictionary handy when I am reading, and do not hesitate to use it without
worrying about the &amp;ldquo;inefficiency&amp;rdquo; of using a physical dictionary.&lt;/p&gt;
&lt;p&gt;Why do this? Well, I found a few benefits of using a physical dictionary.  I
don&amp;rsquo;t get sidetracked.  The longer it takes to look up a word also seems to
correlate positively with greater retention.  And finally, I am able to avoid
distractions while reading.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reflections on a Roadshow Event</title>
      <link>https://karecha.com/blog/2023/02/25/reflections-on-a-roadshow-event/</link>
      <pubDate>Sat, 25 Feb 2023 10:24:17 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2023/02/25/reflections-on-a-roadshow-event/</guid>
      <description>&lt;p&gt;Yesterday, I attended a roadshow by Google Cloud at the Novotel Hotel in Bellandur, Bengaluru. There were around two dozen attendees and a panel of six executives from some well-known companies. The panel discussion involved questions from the moderator, a Google employee, and they had said there would be time for audience questions at the end. Unfortunately, the panel discussion ran over time, and there was no opportunity for Q&amp;amp;A with the panel.&lt;/p&gt;
&lt;p&gt;The next part of the event involved introductions by the attendees and questions for the Google employees. The last hour was spent on dinner, drinks, and socializing. I was surprised by how much I enjoyed this part of the event (no, I did not drink). Since the start of Covid lockdowns, I have worked remotely and continue to do so to this day. Despite the advantages of remote work, one thing I miss is meeting with people to discuss industry trends and hear their perspectives on various topics. Yesterday, I got to do just that, and it was refreshing. I met a young startup founder, a product owner from a large company, a finance manager from another tech company, executives from F&amp;amp;G industry companies, and others. Most of them were just as eager to share their stories as I was to hear them.&lt;/p&gt;
&lt;p&gt;Reflecting on the experience, I realize I should seek out more networking opportunities like this in the future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Incident Management 101: Communicate, Solve, and Analyze</title>
      <link>https://karecha.com/blog/2023/01/13/incident-management-101-communicate-solve-and-analyze/</link>
      <pubDate>Fri, 13 Jan 2023 12:21:12 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2023/01/13/incident-management-101-communicate-solve-and-analyze/</guid>
      <description>&lt;p&gt;In the world of software development, incidents and issues happen all the time; sometimes major ones but mostly minor. Some companies have well-defined checklists and rulebooks for handling incidents, perhaps because they move fast and break things often. Others do not have a rulebook because incidents are a rarity, and they let people&amp;rsquo;s best judgment prevail in terms of how these incidents are handled.&lt;/p&gt;
&lt;p&gt;Next time you find yourself in the eye of a storm, remember these three principles of good incident management.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Communicate: The moment you find yourself an owner of an incident, start communicating. Address your communication to everybody who should know. This could be via email, team chat, or whatever else your company uses to communicate broadly. Let people know about the nature of incident, what is your current understanding of the ongoing impact on business, and what are you planning to do next. Update this thread every time you have something important to say. If you get stuck and it is taking longer for you to make progress, make sure you communicate that too. The last thing you want is for the stakeholders to start pinging you directly for updates which will slow you down. The updates on the communication should stop only after the issue is resolved and your last update should include a summary of the fix.&lt;/li&gt;
&lt;li&gt;Solve: Your goal during an incident is to find the best possible solution in the shortest amount of time, in order to minimize business impact. Seek help as soon as you need it, and make sure you are reaching out to those who you think are in the right position to be able to help you. If the ongoing impact is severe, and you are unable to make progress, escalate up your management chain to let them know that you will need help from someone more knowledgeable in a certain area. Let them find you someone who can step in and help.&lt;/li&gt;
&lt;li&gt;Analyze: Once the storm is over, the next step is to dive deep to find out what caused the issue, what can be improved to prevent similar incidents in the future, and come up with a list of action items. The action you and your team will take after the incident will show the level of maturity of the team as well as the organization. Good teams always improve things in the aftermath of an incident. They focus more on learning and understanding the past mistakes and spend less or no time finger-pointing or blaming.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These simple steps can be followed even if your team or organization is not in the habit of expecting any of this from you. Use this as an opportunity to show your maturity and raise the team bar. This approach will help reduce the stress of incident management by putting you in a problem-solving mode. You and your team will emerge from the crisis much better, stronger, and with a deeper understaning of your applications and business.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming by Hand Will Remain Essential</title>
      <link>https://karecha.com/blog/2023/01/10/programming-by-hand-will-remain-essential/</link>
      <pubDate>Tue, 10 Jan 2023 10:22:44 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2023/01/10/programming-by-hand-will-remain-essential/</guid>
      <description>&lt;p&gt;Here is why old-fashioned programming by hand will not go away after the onset of AI-assisted programming. Think of programming by hand,  unaided by AI, as something similar to walking. Walking is essential for getting us around and improving our health and general well-being. There is enough evidence (see &lt;a href=&#34;https://lithub.com/on-the-link-between-great-thinking-and-obsessive-walking/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://www.newyorker.com/tech/annals-of-technology/walking-helps-us-think&#34;&gt;here&lt;/a&gt;) for how walking improves creativity in any field, including art, math, science, or business. But in terms of helping us get around, walking is perhaps our last choice. We don&amp;rsquo;t walk to work except for the lucky few who live within walking distance from their workplace. We don&amp;rsquo;t walk to a vacation destination. We don&amp;rsquo;t walk to a business conference across the country or across continents. Depending on the distance you need to go, you may choose anything from biking, driving, taking a train, or flying. Yet, walking remains indispensable and we should and we do walk when we can. Transportation tech is advancing every day but we will never forego the ability to walk just because there are faster and more comfortable alternatives.&lt;/p&gt;
&lt;p&gt;Similarly, in the new world of AI-assisted programming, the good old unaided programing will remain an essential skill for software developers. They will be hired, assessed, promoted, rewarded etc. based on this skill. Please remember this next time you are worried about low-code, no-code, or AI-assisted programming replacing a good programmer. If you like programming, keep practicing because it is not going away. At least not in our lifetime.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Rise of AI-Assisted Coding and Writing</title>
      <link>https://karecha.com/blog/2023/01/09/the-rise-of-ai-assisted-coding-and-writing/</link>
      <pubDate>Mon, 09 Jan 2023 11:20:34 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2023/01/09/the-rise-of-ai-assisted-coding-and-writing/</guid>
      <description>&lt;p&gt;I first heard of &lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt; sometime in 2021 when their &lt;a href=&#34;https://openai.com/dall-e-2/&#34;&gt;DALL·E&lt;/a&gt; model-based image generation and manipulation capabilities became publicly available. It created a stir in the tech circle as well as among artists. What pushed OpenAI into the mainstream discussion was their recent launch of &lt;a href=&#34;https://openai.com/blog/chatgpt/&#34;&gt;ChatGPT&lt;/a&gt;, which has capabilities that most people can use, making it a game changer. The way it works is that you provide a prompt and it gives you an output based on that prompt. Students can prompt it to do their homework, journalists can prompt it to write news stories, software developers can prompt it to write code or generate comment for a code snippet, authors can prompt it to write books, and so on.&lt;/p&gt;
&lt;p&gt;This capability is still in its infancy but has reached a point where it will soon change the way people work. It was quite tempting for me to have this post written by ChatGPT, but I resisted that temptation because I don&amp;rsquo;t want to take the fun out of writing a blog post. It would be too easy to churn out post after post using ChatGPT, but then what&amp;rsquo;s the point? We write in order to aid our thinking. However, I have already started using ChatGPT for writing in general, and so have millions of others.&lt;/p&gt;
&lt;p&gt;With &lt;a href=&#34;https://github.com/features/copilot&#34;&gt;GitHub Copilot&lt;/a&gt;, AI-assisted coding will gain momentum. Though Copilot started off getting some flack for copyright infringement, but once the dust settles, it will be a game changer. A few open-source alternatives are also in the making and will compete with Copilot. It is just a matter of time before enough software developers would have tried Copilot or equivalent, and they will be surprised by the difference it makes to their productivity. It will take care of writing all the boiler plate, and let you tweak and finetune the core or business logic it proposes. Eventually, the business leaders will expect software developers to deliver more and deliver faster. They will be able to cut cost by reducing the development team sizes or do more with the existing teams.&lt;/p&gt;
&lt;p&gt;Some software developers may initially see this as a threat, but this will instead have the effect of making tech more approachable or viable for businesses with smaller tech budgets. The net result will be more jobs in the tech sector. I think it is time for us to start thinking of AI-assisted coding and writing as tools in our toolkit. The future continues to get more exciting.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning a Language</title>
      <link>https://karecha.com/blog/2022/11/17/learning-a-language/</link>
      <pubDate>Thu, 17 Nov 2022 13:20:34 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/11/17/learning-a-language/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.math.chalmers.se/~ulfp/Review/SStyle.pdf&#34;&gt;Steven Pinker on learning a language&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You learn a language by exposure. First during the critical stages of growing up, a process surprisingly fast and effective, but only pertaining to the basic aspect of language, namely its oral one. Similarly to learn to write you need to read a lot, and this is a far less natural process and takes much longer time. To acquire a sense of style you need a lot of exposure, and this is what eventually provides you with an ear going beyond that of the oral aspect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This also makes sense if read in the context of programming languages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Three Good Links: 13 July 2022</title>
      <link>https://karecha.com/blog/2022/07/13/three-good-links-13-july-2022/</link>
      <pubDate>Wed, 13 Jul 2022 08:46:53 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/07/13/three-good-links-13-july-2022/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://slack.engineering/remote-development-at-slack/&#34;&gt;Remote Development at Slack&lt;/a&gt;: Slack&amp;rsquo;s developer productivity team moved the entire development experience to remote environments, from code intelligence to type-checking and builds. Engineers no longer have to maintain code or dependencies on their local laptops. They can get a fresh isolated environment on demand, ready to be used within a couple of minutes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://jvns.ca/blog/2022/07/09/monitoring-small-web-services/&#34;&gt;Monitoring tiny web services&lt;/a&gt;: If you run a small but business critical website, this post is for you. Monitor your services with bare minimum cost and effort.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.honeycomb.io/blog/lies-my-parents-told-me-about-logs/&#34;&gt;Lies My Parents Told Me (About Logs)&lt;/a&gt;: Any time there are changes in your scale or maturity or environment, you may need to reconsider your assumptions about logs, and these are good enough place to start.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Three Good Links: 06 July 2022</title>
      <link>https://karecha.com/blog/2022/07/06/three-good-links-06-july-2022/</link>
      <pubDate>Wed, 06 Jul 2022 15:02:15 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/07/06/three-good-links-06-july-2022/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://shopify.engineering/90-day-plan-building-trust-remote-team&#34;&gt;New Manager in a Fully Remote Team&lt;/a&gt;: When you join as a new manager in a fully remote team, it&amp;rsquo;s pretty intense in the first few months as you try ways to establish trust and build a strong team together. This post will help you start in a fully remote space and build trust from the ground up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/prescriptive-guidance/latest/aws-startup-security-baseline/welcome.html&#34;&gt;AWS Startup Security Baseline&lt;/a&gt;: Early stage startup? The controls in this guide are designed to mitigate the most common security risks without requiring significant effort. As the organization grows, you can scale and build upon these controls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;History of Version Control Systems - Part &lt;a href=&#34;https://matt-rickard.com/history-of-version-control-part-1/&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://matt-rickard.com/history-of-version-control-part-2/&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;https://matt-rickard.com/history-of-version-control-systems-part-3/&#34;&gt;3&lt;/a&gt;&lt;/strong&gt;: In this three-part series, the author provides a bird&amp;rsquo;s eye view of the three generations of version control systems. If you have never used anything other than Git, this is a good introduction to history. For the rest of us, it is a nostalgia trip.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Three Good Links: 29 June 2022</title>
      <link>https://karecha.com/blog/2022/06/29/three-good-links-29-june-2022/</link>
      <pubDate>Wed, 29 Jun 2022 11:10:23 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/06/29/three-good-links-29-june-2022/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://larahogan.me/blog/first-one-on-one-questions/&#34;&gt;Questions for our first 1:1&lt;/a&gt;: Lara Hogan&amp;rsquo;s advice to Engineering Managers starting a new reporting relationship &amp;ndash; gather this particular data during an initial 1:1.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/walmartglobaltech/graphql-vs-rest-f067a79c2230&#34;&gt;GraphQL vs REST&lt;/a&gt;: Because of its benefits, Walmart Affiliate Team has adopted GraphQL for many applications, instead of using REST. This post compares the two approaches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.blog/2022-05-16-how-were-using-projects-to-build-projects/&#34;&gt;How we&amp;rsquo;re using projects to build projects&lt;/a&gt;: If your team uses GitHub for hosting code but does not use it for project planning and execution, you may want to reconsider. Check out how GitHub uses projects to build a powerful project planning for developers in a &amp;ldquo;Eat your own dog food&amp;rdquo; kind of way.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Three Good Links: 22 June 2022</title>
      <link>https://karecha.com/blog/2022/06/22/three-good-links-22-june-2022/</link>
      <pubDate>Wed, 22 Jun 2022 08:48:44 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/06/22/three-good-links-22-june-2022/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lingnik.com/2022/06/07/i-am-an-engineer-again-or-there-and-back-again.html&#34;&gt;I&amp;rsquo;m an Engineer Again&lt;/a&gt;: A story of an engineer who became a manager and then seven years later, decided to stop being a manager. Now he is an engineer again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://engineering.grab.com/real-time-data-ingestion&#34;&gt;Real-time data ingestion at Grab&lt;/a&gt;: Grab&amp;rsquo;s scalable event-driven solution, facilitated by a bunch of internal products, and designed for real-time ingestion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tbray.org/ongoing/When/202x/2022/06/10/Quamina-Optimizing&#34;&gt;Making Code Faster&lt;/a&gt;: When you have a body of code with a decent unit-test suite and you need to make it go faster.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Three Good Links: 15 June 2022</title>
      <link>https://karecha.com/blog/2022/06/15/three-good-links-15-june-2022/</link>
      <pubDate>Wed, 15 Jun 2022 08:15:15 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/06/15/three-good-links-15-june-2022/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://8thlight.com/blog/abstractions-are-opinionated/&#34;&gt;How Effective Abstractions Are Opinionated&lt;/a&gt;: Every software system is built on top of a towering stack of abstractions. Yet we know abstractions are imperfect representations of reality. How does it all work together? How can we make any progress if we can’t fundamentally trust our tools?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://vitalik.ca/general/2022/06/12/nonfin.html&#34;&gt;Where to use a blockchain in non-financial applications?&lt;/a&gt;: Recently, there has been a growing amount of interest in using blockchains for not-just-financial applications. What could be done with a richer ecosystem of soulbound tokens making claims describing various kinds of relationships?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.programmingbooks.dev/&#34;&gt;Programming Books&lt;/a&gt;: An Ordered and Curated Reading List for Software Craftsmanship Growth.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Engineering Managers -- Improve Success In Your New Job</title>
      <link>https://karecha.com/blog/2022/06/14/engineering-managers--improve-success-in-your-new-job/</link>
      <pubDate>Tue, 14 Jun 2022 12:26:10 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/06/14/engineering-managers--improve-success-in-your-new-job/</guid>
      <description>&lt;p&gt;What can you do to improve your success in a new job as Engineering Manager (EM)? To answer this question, we will start with your offer acceptance. We will assume you are already an EM and this role is not new to you. Stepping into an EM role for the first time requires a different kind of preparation which is a separate discussion. This post is for EMs who are switching companies, have interviewed, got offer(s), and have accepted the most suitable offer.&lt;/p&gt;
&lt;p&gt;Once offer acceptance marks an end to your job hunt, shift your focus to onboarding, and beyond. Here&amp;rsquo;s a two-part plan. Part one is what you can do until the day of joining and part two is what you can do in the first 4 weeks after joining. This is not an exhaustive list of possible actions but should broadly apply to many EM roles.&lt;/p&gt;
&lt;h2 id=&#34;part-one&#34;&gt;Part one&lt;/h2&gt;
&lt;p&gt;As the joining date approaches, use your time to get familiar with your new employer&amp;rsquo;s business domain and tech stack. Brush up on your management fundamentals too. Let&amp;rsquo;s take a look at each one of these:&lt;/p&gt;
&lt;h3 id=&#34;1-business-domain&#34;&gt;1. Business domain&lt;/h3&gt;
&lt;p&gt;The new business domain may be unfamiliar territory for you unless you are switching jobs within the same domain. In any case, you can either learn or reinforce your domain knowledge. This is the time when you will be able to glance at the broad terrain of this domain without getting lost in the details, which is unavoidable after you start on the job. Read an introductory book about this domain or read an advanced topics book if you are already familiar with the domain. The idea is to up your game on your domain knowledge. Find other resources on the web that can give you more information about the domain. Learn about recent advancements in this domain. Scan news about your domain and set up Google Alerts to keep up with new developments.&lt;/p&gt;
&lt;h4 id=&#34;2-techstack&#34;&gt;2. Techstack&lt;/h4&gt;
&lt;p&gt;Ask the hiring manager about the tech stack you will be using. Also, find out what is on the technology roadmap for the next two or more quarters. List the key technologies or frameworks they use, including the infrastructure they use, and learn or brush up on these topics and learn the jargon. Once you start a new job, initially you may not find time to learn new things.&lt;/p&gt;
&lt;h3 id=&#34;3-engineering-management-fundamentals&#34;&gt;3. Engineering management fundamentals&lt;/h3&gt;
&lt;p&gt;Brush up on your engineering management fundamentals. This is an opportunity to reflect upon what you did well and what you could have done better. You could also brush up on your project management methodology skills. Starting on a clean slate allows you to do things differently. Hence, based on your past experience, think about what would you do differently this time.&lt;/p&gt;
&lt;h2 id=&#34;part-two&#34;&gt;Part two&lt;/h2&gt;
&lt;p&gt;This phase begins on the day you start your new job. In the first four weeks, focus on observing, networking, mapping the territory, and goal setting.&lt;/p&gt;
&lt;h3 id=&#34;1-connect-and-network&#34;&gt;1. Connect and network&lt;/h3&gt;
&lt;p&gt;Your hiring manager will introduce you to the team, but if they do not (yes, people forget!), go ahead and do that yourself as soon as you can. Set up one-on-ones with your team members. Understand their view of the product and people. You also want to start meeting up with your peers, your superiors, product owners, and other stakeholders. During the 1x1s, focus on learning about their role and identify synergies. Understand their expectations from your role and identify co-dependencies. It can be tempting to spend too much time in the 1x1 talking about yourself; resist the urge. You do not have to prove anything to anybody yet, let your work eventually speak for itself, but it will take time. So, during 1x1s, ask questions, listen, try to understand, take notes, and ask about their biggest challenges and how can you help.&lt;/p&gt;
&lt;h3 id=&#34;2-get-your-hands-dirty&#34;&gt;2. Get your hands dirty&lt;/h3&gt;
&lt;p&gt;Set up your dev environment. Put on the hat of an engineer in the team and list down all the pain points a new joiner will encounter during onboarding. As you go through this process, update onboarding documentation with new information which you find missing. If there is no onboarding documentation, create one! Start participating in team rituals. Go through the Jira issues (or whatever equivalent your team uses for an issue tracker). Ask questions on tickets, on team chat, during the standups, and other team meetings. Resist the urge to change things too soon &amp;ndash; you may not understand enough about the product or the team to start making informed decisions yet. As they say, if a wall exists it is there for a reason. Do not tear down the walls too soon; you will be surprised by what else crumbles.&lt;/p&gt;
&lt;h3 id=&#34;3-get-a-foothold&#34;&gt;3. Get a foothold&lt;/h3&gt;
&lt;p&gt;By the end of the fourth week, strive to be in a position where you can answer questions from your stakeholders without having to consult your team. Don&amp;rsquo;t get me wrong, it is difficult to answer every question in this short duration, but aiming to do so will propel you in the right direction.&lt;/p&gt;
&lt;h3 id=&#34;4-set-goals&#34;&gt;4. Set goals&lt;/h3&gt;
&lt;p&gt;Finally, within the first four weeks, you should have a good understanding of your role&amp;rsquo;s expectations. You should be able to explain what it takes to succeed in this role. This is best done by documenting your goals which you and your manager have agreed upon. Working hard without knowing your goals will sap your energy, enthusiasm, and morale.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;By the end of the fourth week at this new job, you should start feeling at home. You are onboarded, and the next phase begins. From here on, you will contribute to business and deliver a measurable impact. These were the first steps to success in your new job. You are going to be amazing!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Three Good Links: 08 June 2022</title>
      <link>https://karecha.com/blog/2022/06/08/three-good-links-08-june-2022/</link>
      <pubDate>Wed, 08 Jun 2022 09:24:12 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/06/08/three-good-links-08-june-2022/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jamesshore.com/v2/blog/2019/dont-measure-unit-test-code-coverage&#34;&gt;Don&amp;rsquo;t Measure Unit Test Code Coverage&lt;/a&gt;: Are you trying to improve the code quality? Learn testing skills, speed up the test loop, refactor more, use evolutionary design, and try pairing or mobbing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cacm.acm.org/magazines/2022/5/260357-the-go-programming-language-and-environment/fulltext&#34;&gt;The Go Programming Language and Environment&lt;/a&gt;: Creators of Go examine the design decisions they believe are most responsible for Go&amp;rsquo;s success, exploring how they apply not just to the language but also to the environment more broadly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://architecturenotes.co/fallacies-of-distributed-systems/&#34;&gt;Fallacies of Distributed Systems&lt;/a&gt;: A set of assertions made by L Peter Deutsch and others at Sun Microsystems describing false assumptions that programmers new to distributed applications invariably make.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Three Good Links: 01 June 2022</title>
      <link>https://karecha.com/blog/2022/06/01/three-good-links-01-june-2022/</link>
      <pubDate>Wed, 01 Jun 2022 07:23:56 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/06/01/three-good-links-01-june-2022/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.infoworld.com/article/3635708/technical-debt-will-sink-you.html&#34;&gt;Technical debt will sink you&lt;/a&gt;: Short-term fixes and partially implemented systems have costs that can weigh on a company for years. This debt can also stifle innovation, resulting in lower long-term revenue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/RedditEng/comments/uu3mwj/android_dynamic_feature_modules/&#34;&gt;Android Dynamic Feature Modules&lt;/a&gt;: Reddit Tech Blog talks about how they used Android&amp;rsquo;s Dynamic Feature Modules to reduce the Reddit app size after integrating a new feature from an acquisition.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tom.preston-werner.com/2022/05/23/major-version-numbers-are-not-sacred.html&#34;&gt;Major Version Numbers are Not Sacred&lt;/a&gt;: The author of Semantic Versioning (SemVer) spec is unhappy about our collective hesitance to bump the major version of packages. He attempts to convince us that major version numbers are not sacred.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Perks of Remote Work</title>
      <link>https://karecha.com/blog/2022/05/30/perks-of-remote-work/</link>
      <pubDate>Mon, 30 May 2022 09:05:19 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/05/30/perks-of-remote-work/</guid>
      <description>&lt;p&gt;Remote work is showing signs of going mainstream. This presents an opportunity for knowledge workers to embrace this option and lead a healthy life. However, there are misconceptions about remote work that can lead to the opposite and you may end up living an unhealthy life. Some misconceptions are: flexible work hours, the ability to work in pajamas, the ability to work from vacation spots, etc. While enticing, this framing is misguided because such a lifestyle is unsustainable. This may be why after the pandemic, some people are longing to go back to the office. They miss the structure and routine an office can provide for their workday.&lt;/p&gt;
&lt;p&gt;Remote work works best if you are self-disciplined. Once the guard rails from an office environment are unavailable, you need to build your own. You need to fix your work hours. You need to dress for work even when you are remote because this helps your brain put you in work mode. Not doing this blurs the work/life boundary, leading to burnout. Replace your commute time with low-intensity workouts, such as a 30-minute stroll in the neighborhood before and after work. This creates a reasonable boundary between your work hours and off-hours. That last thing is the best part of remote work. No more &amp;ldquo;I don&amp;rsquo;t have time for exercise&amp;rdquo; excuse!&lt;/p&gt;
&lt;p&gt;Remote work is here to stay as an option for knowledge workers. When done right, it can be life-changing. Seize this opportunity if you can.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Three Good Links: 25 May 2022</title>
      <link>https://karecha.com/blog/2022/05/25/three-good-links-25-may-2022/</link>
      <pubDate>Wed, 25 May 2022 12:07:26 +0530</pubDate>
      <author>tapan@karecha.com (Tapan Karecha)</author>
      <guid>https://karecha.com/blog/2022/05/25/three-good-links-25-may-2022/</guid>
      <description>&lt;p&gt;Sage advice from Steve McConnell on improving software engineering outcomes; a video introduction to machine learning; and how to build Go backends.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://stevemcconnell.com/articles/cargo-cult-software-engineering/&#34;&gt;Cargo Cult Software Engineering&lt;/a&gt;: In this classic article, Steve McConnell argues that rather than debating process vs. commitment, we should be looking for ways to raise the average level of developer and manager competence to improve outcomes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qpCQUJQvOrs&#34;&gt;A Quick Guide to Machine Learning&lt;/a&gt;: Seth Juarez of Microsoft talks about machine learning in a way that a programmer gets. He also makes us laugh along the way! He says: Artificial Intelligence is what it is called when you are selling it, and Machine Learning is what it is called when you are doing it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://8thlight.com/blog/emmanuel-byrd/2022/05/19/well-thought-project-layout-design-for-a-golang-backend.html&#34;&gt;How To Bootstrap A Quality Golang Backend&lt;/a&gt;: Having the knowledge to build a Golang project from scratch will not only give you more freedom to build your own apps, but will also provide you with a better understanding of why your existing codebases are built that way.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
